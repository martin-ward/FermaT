C:"
==========================================================================
FermaT Transformation System
Copyright (C) 2001 Software Migrations Limited.
Email: martin@gkc.org.uk

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
==========================================================================";



@Test_Trans(" 1st test of `Collapse Action System'",
	    (FILL Statements  ACTIONS A1:
				A1 == IF B=20 THEN CALL Z
				      ELSIF B=20 THEN CALL Z
					ELSE B:=B+X; CALL A1 FI.
			      ENDACTIONS ENDFILL),
	     <1>,
	     TR_Collapse_Action_System,
	     < >,
	     (FILL Statements DO IF B=20 THEN EXIT(1)
				 ELSIF B=20 THEN EXIT(1)
				 ELSE  B:=B+X FI OD ENDFILL));


@Test_Trans(" 2nd test of `Collapse Action System'",
	    (FILL Statements  ACTIONS A1:
				A1 == IF B=10 THEN CALL Z
				      ELSIF B=20 THEN CALL B1
					ELSE B:=B+X; CALL A1 FI.
				B1 == X:=B;
				      DO X:=X-1;
					 IF X < 20 THEN CALL A1 
					  ELSE B := B-4 FI OD.
			      ENDACTIONS ENDFILL),
	     <1>,
	     TR_Collapse_Action_System,
	     < >,
	     (FILL Statements DO IF B=10 THEN EXIT(1)
				 ELSIF B=20 THEN 
				    X:=B;
				    DO X:=X-1; 
				       IF X<20 THEN EXIT(1)
				       ELSE B:=B-4 FI OD
				  ELSE B:=B+X FI OD ENDFILL));


@Test_Trans(" 3rd test of `Collapse Action System'",
	    (FILL Statements 

ACTIONS PROG:
     PROG == <line:= "", m:=0, I:=1>;
             CALL INHERE.
        L == i := i+1;
             IF i = (n+1) THEN CALL ALLDONE FI;
             m := 1;
             IF item[i] <> last 
               THEN write(line); line := ""; m:= 0;
                    CALL INHERE FI;
             CALL MORE.
    INHERE == p:=number[i]; line := item[i]; line := line++" "++p;
              CALL MORE.
      MORE == IF m=1 THEN p:=number[i]; line:=line++", "++p FI;
              last:=item[i]; CALL L.
   ALLDONE == write(line); CALL Z. 
ENDACTIONS

             ENDFILL),
	     <1>,
	     TR_Collapse_Action_System,
	     < >,
	     (FILL Statements

< line := "", m := 0, I := 1 >;
DO p := number[i];
   line := item[i];
   line := line ++ " " ++ p;
   DO IF m = 1
	THEN p := number[i]; line := line ++ ", " ++ p FI;
      last := item[i];
      i := i + 1;
      IF i = n + 1 THEN write(line); EXIT(2) FI;
      m := 1;
      IF item[i] <> last
	THEN write(line); line := ""; m := 0; EXIT(1) FI
   OD OD ENDFILL));


@Test_Trans(" 4th test of `Collapse Action System'",
	    (FILL Statements  ACTIONS A1:
				A1 == IF B=10 THEN CALL Z
				      ELSIF B=20 THEN CALL B1
					ELSE B:=B+X; CALL Z FI.
				B1 == X:=B;
				      X:=X-1;
				      IF X < 20 THEN CALL A1; X:=X-1; CALL B1
					ELSE B := B-4; CALL Z FI.
			      ENDACTIONS ENDFILL),
	     <1>,
	     TR_Collapse_Action_System,
	     < >,
	     (FILL Statements
DO IF B = 10
     THEN EXIT(1)
   ELSIF B = 20
     THEN X := B;
	  X := X - 1;
	  IF X >= 20 THEN B := B - 4; EXIT(1) FI
     ELSE B := B + X; EXIT(1) FI OD ENDFILL));



@Test_Trans(" 5th test of `Collapse Action System'",
	    (FILL Statements

ACTIONS A1:
A1 == IF B=10 THEN CALL Z
      ELSIF B=20 THEN B := B + 1; CALL B1
      ELSIF B=21 THEN CALL B1
      ELSIF B=22 THEN CALL C1
		 ELSE B:=B+X; CALL Z FI.
B1 == X:=B;
      X:=X-1;
      IF X < 10 THEN Y1 := Y1 + 1 ELSE Z1 := Z1 * 3 FI;
      IF X < 15 THEN Y2 := Y2 + 1 ELSE Z2 := Z2 * 3 FI;
      IF X < 20 THEN CALL A1;
		ELSE B1 := B1-4; CALL Z FI.
C1 == X2:=B;
      X2:=X2-1;
      IF X2 < 25 THEN Y3 := Y3 + 1 ELSE Z3 := Z3 * 3 FI;
      IF X2 < 30 THEN CALL B1;
		 ELSE B2 := B2-4; CALL Z FI.
ENDACTIONS

ENDFILL),
	     <1>,
	     TR_Collapse_Action_System,
	     < >,
	     (FILL Statements

BEGIN
  DO DO IF B = 10
	  THEN EXIT(2)
	ELSIF B = 20
	  THEN B := B + 1
	ELSIF B = 22
	  THEN X2 := B;
	       X2 := X2 - 1;
	       IF X2 < 25 THEN Y3 := Y3 + 1 ELSE Z3 := Z3 * 3 FI;
	       IF X2 < 30
		 THEN p_1();
		      IF X < 20 THEN EXIT(1) ELSE B1 := B1 - 4; EXIT(2) FI
		 ELSE B2 := B2 - 4; EXIT(2) FI
	ELSIF B <> 21
	  THEN B := B + X; EXIT(2) FI;
	p_1();
	IF X < 20 THEN EXIT(1) ELSE B1 := B1 - 4; EXIT(2) FI
     OD OD
WHERE
  PROC p_1() ==
    X := B;
    X := X - 1;
    IF X < 10 THEN Y1 := Y1 + 1 ELSE Z1 := Z1 * 3 FI;
    IF X < 15 THEN Y2 := Y2 + 1 ELSE Z2 := Z2 * 3 FI
  END
END

ENDFILL));



@Test_Trans(" 6th test of `Collapse Action System'",
	    (FILL Statements

ACTIONS A:
  A == IF A=1 THEN X:=X-1 FI;
       IF X=0 THEN  Z := A*B; Y:=Y+1; IF A=B THEN CALL Z ELSE CALL D FI
       ELSIF X=2 THEN Y := 3; Y:=Y+1; CALL Z
                 ELSE Y := Y+1; CALL D FI;
       CALL Z.
  D == IF (X+1)=(Y+1)
         THEN A := 3; IF A=B THEN CALL Z ELSE CALL D FI
         ELSE A := 907; CALL Z FI;
       J := J + 1. END ENDACTIONS

             ENDFILL),
	     <1>,
	     TR_Collapse_Action_System,
	     < >,
	     (FILL Statements

BEGIN
  IF A = 1 THEN X := X - 1 FI;
  IF X = 0
    THEN Z := A * B; Y := Y + 1; IF A <> B THEN D() FI
  ELSIF X = 2
    THEN Y := 3; Y := Y + 1
    ELSE Y := Y + 1; D() FI
WHERE
  PROC D() ==
    DO IF X + 1 = Y + 1
         THEN A := 3; IF A = B THEN EXIT(1) FI
         ELSE A := 907; EXIT(1) FI OD END
END

ENDFILL));


@Test_Trans(" 7th test of `Collapse Action System'",
	    (FILL Statements

ACTIONS A:
  A == IF A=1 THEN X:=X-1 FI;
       IF X=0 THEN  Z := A*B; Y:=Y+1; CALL E
       ELSIF X=2 THEN Y := 3; Y:=Y+1; CALL Z
                 ELSE Y := Y+1; CALL D FI;
       CALL Z.
  D == IF (X+1)=(Y+1)
         THEN A := 3; CALL E
         ELSE A := 907; CALL Z FI;
       J := J + 1 .
  E == IF A=B THEN CALL Z ELSE CALL D FI. ENDACTIONS

             ENDFILL),
	     <1>,
	     TR_Collapse_Action_System,
	     < >,
	     (FILL Statements

BEGIN
  IF A = 1 THEN X := X - 1 FI;
  IF X = 0
    THEN Z := A * B; Y := Y + 1; IF A <> B THEN D() FI
  ELSIF X = 2
    THEN Y := 3; Y := Y + 1
    ELSE Y := Y + 1; D() FI
WHERE
  PROC D() ==
    DO IF X + 1 = Y + 1
         THEN A := 3; IF A = B THEN EXIT(1) FI
         ELSE A := 907; EXIT(1) FI OD END
END

ENDFILL));




SKIP




