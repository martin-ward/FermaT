C:"
==========================================================================
FermaT Transformation System
Copyright (C) 2001 Software Migrations Limited.
Email: martin@gkc.org.uk

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
==========================================================================";

@Test_Trans(" 1st test of `Loop_To_Move'",
	    (FILL Statements WHILE r5 <> 0 DO
                               r9[4] := a[r1];
                               a[r6] := a[r1];
                               r6 := r6 + 1;
                               r1 := r1 + 1;
                               r5 := r5 - 1 OD ENDFILL),
	    <1>,
	    TR_Loop_To_Move,
	    < >,
	    (FILL Statements a[r6, r5] := a[r1, r5];
                             r6 := r6 + r5;
                             r1 := r1 + r5;
                             r9[4] := a[r1 - 1];
                             r5 := 0 ENDFILL));


@Test_Trans(" 2nd test of `Loop_To_Move'",
	    (FILL Statements WHILE r5 <> 0 DO
                               r9[4] := a[r1];
                               a[r6] := r9[4];
                               r6 := r6 + 1;
                               r1 := r1 + 1;
                               r5 := r5 - 1 OD ENDFILL),
	    <1>,
	    TR_Loop_To_Move,
	    < >,
	    (FILL Statements a[r6, r5] := a[r1, r5];
                             r6 := r6 + r5;
                             r1 := r1 + r5;
                             r9[4] := a[r1 - 1];
                             r5 := 0 ENDFILL));


@Test_Trans(" 3rd test of `Loop_To_Move'",
	    (FILL Statements WHILE r1 <> 0 DO
                               a[r14] := a[r15];
                               r14 := r14 - 1;
                               r15 := r15 - 1;
                               r1 := r1 - 1 OD ENDFILL),
	    <1>,
	    TR_Loop_To_Move,
	    < >,
	    (FILL Statements r14 := r14 - r1;
                             r15 := r15 - r1;
                             a[r14 + 1, r1] := a[r15 + 1, r1];
                             r1 := 0 ENDFILL));


SKIP

