C:"
==========================================================================
FermaT Transformation System
Copyright (C) 2001 Software Migrations Limited.
Email: martin@gkc.org.uk

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
==========================================================================";

@Test_Trans(" 1st test of `Expand_Forward'",
	    (FILL Statements IF (X=1) THEN A:=2
			     ELSIF (X=2) THEN
				 DO A:=A+X;
				    IF (A>10) THEN EXIT(2)
				    ELSIF(A>5) THEN EXIT(1) FI
				 OD
			     ELSE A:=A+10 FI;
			     X:=X+A ENDFILL),
	    <1>,
	    TR_Expand_Forward,
	    < >,
	    (FILL Statements IF (X=1) THEN A:=2; X:=X+A
			     ELSIF (X=2) THEN
				 DO A:=A+X;
				    IF (A>10) THEN EXIT(2)
				    ELSIF(A>5) THEN  EXIT(1) FI
				 OD; X:=X+A
			     ELSE A:=A+10; X:=X+A FI ENDFILL));


@Test_Trans(" 2nd test of `Expand_Forward'",
	    (FILL Statements IF (X=1) THEN A:=2
			     ELSIF (X=2) THEN
				  A:=A+X;
				  IF (A>10) THEN EXIT(2)
				  ELSIF(A>5) THEN EXIT(1) FI   
				ELSE A:=A+10 FI;
			     X:=X+A ENDFILL),
	    <1>,
	    TR_Expand_Forward,
	    < >,
	    (FILL Statements IF (X=1) THEN A:=2; X:=X+A
			     ELSIF (X=2) THEN
				 A:=A+X;
				 IF (A>10) THEN EXIT(2)
				 ELSIF(A>5) THEN  EXIT(1) FI;
				 X:=X+A
			     ELSE A:=A+10; X:=X+A FI ENDFILL));


@Test_Trans(" 3rd test of `Expand_Forward'",
	    (FILL Statements IF (X=1) THEN A:=2
			     ELSIF (X=2) THEN
				  A:=A+X;
				  IF (A>10) THEN EXIT(2)
				  ELSE EXIT(1) FI   
				ELSE A:=A+10 FI;
			     X:=X+A ENDFILL),
	    <1>,
	    TR_Expand_Forward,
	    < >,
	    (FILL Statements IF (X=1) THEN A:=2; X:=X+A
			     ELSIF (X=2) THEN
				 A:=A+X;
				 IF (A>10) THEN EXIT(2)
				 ELSE  EXIT(1) FI
			     ELSE A:=A+10; X:=X+A FI ENDFILL));


@Test_Trans(" 4th test of `Expand_Forward'",
	    (FILL Statements IF (X=1) THEN A:=2
			     ELSIF (X=2) THEN
				DO  A:=A+X;
				    IF (A>10) THEN CALL A
				    ELSIF(A>5) THEN EXIT(1) FI OD 
				ELSE A:=A+10 FI;
			     X:=X+A ENDFILL),
	    <1>,
	    TR_Expand_Forward,
	    < >,
	    (FILL Statements IF (X=1) THEN A:=2; X:=X+A
			     ELSIF (X=2) THEN
				DO A:=A+X;
				   IF (A>10) THEN CALL A
				   ELSIF(A>5) THEN  EXIT(1) FI OD;
				X:=X+A
			     ELSE A:=A+10; X:=X+A FI ENDFILL));


@Test_Trans(" 5th test of `Expand_Forward'",
	    (FILL Statements IF (X=1) THEN A:=2
			     ELSIF (X=2) THEN
				DO  A:=A+X;
				    IF (A>10) THEN CALL A
				    ELSIF(A>5) THEN EXIT(1) FI OD 
				ELSE A:=A+10 FI;
			      IF (X=1) THEN A:=2
			      ELSIF (X=2) THEN
				DO  A:=A+X;
				    IF (A>10) THEN CALL A
				    ELSIF(A>5) THEN EXIT(1) FI OD 
				ELSE A:=A+10 FI ENDFILL),
	    <1>,
	    TR_Expand_Forward,
	    < >,
	    (FILL Statements IF (X=1) 
				THEN A:=2;
				     IF (X=1) THEN A:=2
				     ELSIF (X=2) THEN
					 DO  A:=A+X;
					     IF (A>10) THEN CALL A
					     ELSIF(A>5) THEN EXIT(1) FI OD 
				ELSE A:=A+10 FI
			     ELSIF (X=2) THEN
				DO A:=A+X;
				   IF (A>10) THEN CALL A
				   ELSIF(A>5) THEN  EXIT(1) FI OD;
				IF (X=1) THEN A:=2
				ELSIF (X=2) THEN
				    DO  A:=A+X;
					IF (A>10) THEN CALL A
					ELSIF(A>5) THEN EXIT(1) FI OD 
				    ELSE A:=A+10 FI
				ELSE A:=A+10; 
			     IF (X=1) THEN A:=2
			     ELSIF (X=2) THEN
				DO  A:=A+X;
				    IF (A>10) THEN CALL A
				    ELSIF(A>5) THEN EXIT(1) FI OD 
				ELSE A:=A+10 FI FI ENDFILL));



@Test_Trans(" 6th test of `Expand_Forward'",
	    (FILL Statements D_IF (X=1) -> A:=2
			       [] (X=2) -> A:=A+X;
					   IF (A>10) THEN EXIT(2)
					   ELSE EXIT(1) FI   
			       [] (X=3) -> A:=A+10 
			     FI;
			     X:=X+A ENDFILL),
	    <1>,
	    TR_Expand_Forward,
	    < >,
	    (FILL Statements D_IF (X=1) -> A:=2; X:=X+A
			       [] (X=2) -> A:=A+X;
					   IF (A>10) THEN EXIT(2)
					   ELSE  EXIT(1) FI
			       [] (X=3) -> A:=A+10; X:=X+A 
			     FI ENDFILL));

@Test_Trans(" 7th test of `Expand_Forward'",
	    (FILL Statements D_IF (X=1) -> A:=2
			       [] (X=2) -> A:=A+X;
					   IF (A>10) THEN EXIT(2)
					   ELSE EXIT(1) FI   
			       [] (X<>2) -> A:=A+10
			     FI;
			     X:=X+A ENDFILL),
	    <1>,
	    TR_Expand_Forward,
	    < >,
	    (FILL Statements D_IF (X=1) -> A:=2; X:=X+A
			       [] (X=2) -> A:=A+X;
					   IF (A>10) THEN EXIT(2)
					   ELSE  EXIT(1) FI
			       [] (X<>2) -> A:=A+10; X:=X+A 
			     FI ENDFILL))

