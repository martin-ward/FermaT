C:"
==========================================================================
FermaT Transformation System
Copyright (C) 2001 Software Migrations Limited.
Email: martin@gkc.org.uk

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
==========================================================================";

@Test_Trans("First test of `Add Assertion'",
            (FILL Statements ABORT; SKIP ENDFILL),
            <1>,
            TR_Add_Assertion,
            < >,
            (FILL Statements ABORT; {FALSE}; SKIP ENDFILL));


@Test_Trans("Second test of `Add Assertion'",
            (FILL Statements {A=B}; SKIP ENDFILL),
            <1>,
            TR_Add_Assertion,
            < >,
	    (FILL Statements {A=B}; {A=B}; SKIP ENDFILL));


@Test_Trans("Third test of `Add Assertion'",
            (FILL Statements {A=B}; SKIP ENDFILL),
            <1, 1>,
            TR_Add_Assertion,
            < >,
	    (FILL Statements {A=B}; {A=B}; SKIP ENDFILL));


@Test_Trans("Fourth test of `Add Assertion'",
            (FILL Statements <X:=0, Y:=1>; SKIP ENDFILL),
            <1>,
            TR_Add_Assertion,
            < >,
	    (FILL Statements <X:=0, Y:=1>; {(X=0) AND (Y=1)}; SKIP ENDFILL));


@Test_Trans("Fifth test of `Add Assertion'",
            (FILL Statements <X:=0, Y:=X+1>; SKIP ENDFILL),
            <1>,
            TR_Add_Assertion,
            < >,
            (FILL Statements <X:=0, Y:=X+1>; {X=0}; SKIP ENDFILL));


@Test_Trans("Sixth test of `Add Assertion'",
            (FILL Statements IF A = 1
                                THEN EXIT(1)
                             ELSIF A = 2
                                THEN SKIP; {A=2}
                             ELSIF A = 3
                                THEN SKIP; {A=3}
                                ELSE EXIT(1) FI ENDFILL),
            <1>,
            TR_Add_Assertion,
            < >,
            (FILL Statements IF A = 1
                                THEN EXIT(1)
                             ELSIF A = 2
                                THEN SKIP; {A=2}
                             ELSIF A = 3
                                THEN SKIP; {A=3}
                                ELSE EXIT(1) FI;
                             {(A=2) OR (A=3)} ENDFILL));


@Test_Trans("Seventh test of `Add Assertion'",
            (FILL Statements IF A = 1
                                THEN EXIT(1)
                             ELSIF A = 2
                                THEN {A=2}; SKIP
                             ELSIF A = 3
                                THEN SKIP; {A=3}
                                ELSE EXIT(1) FI ENDFILL),
            <1>,
            TR_Add_Assertion,
            < >,
            "Fail");


@Test_Trans("Eighth test of `Add Assertion'",
            (FILL Statements WHILE A < 10 DO
                                   A := A + 1;
                                   SKIP OD ENDFILL),
            <1>,
            TR_Add_Assertion,
            < >,
            (FILL Statements WHILE A < 10 DO
                                   A := A + 1;
                                   SKIP OD;
                             {(A >= 10)} ENDFILL));


@Test_Trans("Ninth test of `Add Assertion'",
            (FILL Statements IF A = B THEN Q := 4; SKIP FI ENDFILL),
            <1, 1, 1>,
            TR_Add_Assertion,
            < >,
            (FILL Statements IF A = B THEN {(A = B)}; Q := 4; SKIP FI ENDFILL));


@Test_Trans("Tenth test of `Add Assertion'",
            (FILL Statements DO IF A = B THEN EXIT(1) FI; Q := 4 OD ENDFILL),
            <1>,
            TR_Add_Assertion,
            < >,
            "Fail");

@Test_Trans("Eleventh test of `Add Assertion'",
            (FILL Statements DO  Q := 4 OD ENDFILL),
            <1>,
            TR_Add_Assertion,
            < >,
            (FILL Statements DO  Q := 4 OD; {FALSE} ENDFILL));
            
@Test_Trans("Twelfth test of `Add Assertion'",
            (FILL Statements DO IF A = B THEN EXIT(2) FI; Q := 4 OD ENDFILL),
            <1>,
            TR_Add_Assertion,
            < >,
            (FILL Statements DO IF A = B THEN EXIT(2) FI; 
                                   Q := 4 OD; {FALSE} ENDFILL))
         
