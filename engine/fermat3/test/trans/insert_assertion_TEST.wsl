C:"
==========================================================================
FermaT Transformation System
Copyright (C) 2001 Software Migrations Limited.
Email: martin@gkc.org.uk

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
==========================================================================";

@Test_Trans(" 1st test of `Insert Assertion'",
	    (FILL Statements IF A = 1
				THEN EXIT(1)
			     ELSIF A < 2
				THEN SKIP
			     ELSIF (A <> 3) AND (A <> 4)
				THEN SKIP
				ELSE EXIT(1) FI ENDFILL),
	    <1>,
	    TR_Insert_Assertion,
	    < >,
	    (FILL Statements IF A = 1
				THEN {(A=1)}; EXIT(1)
			     ELSIF A < 2
				THEN {(A<2)}; SKIP
			     ELSIF (A <> 3) AND (A <> 4)
				THEN {(A <> 3) AND (A <> 4)}; SKIP
				ELSE {A = 3 OR A = 4}; EXIT(1) FI ENDFILL));


@Test_Trans(" 2nd test of `Insert Assertion'",
	    (FILL Statements IF A = 1
				THEN EXIT(1)
			     ELSIF A < 2
				THEN SKIP FI ENDFILL),
	    <1, 1>,
	    TR_Insert_Assertion,
	    < >,
	    (FILL Statements IF A = 1
				THEN {(A=1)}; EXIT(1)
			     ELSIF A < 2
				THEN SKIP FI ENDFILL));


@Test_Trans(" 3rd test of `Insert Assertion'",
	    (FILL Statements WHILE A < 10 DO
				   A := A + 1;
				   SKIP OD ENDFILL),
	    <1>,
	    TR_Insert_Assertion,
	    < >,
	    (FILL Statements WHILE A < 10 DO
				   {(A < 10)};
				   A := A + 1;
				   SKIP OD ENDFILL));

@Test_Trans(" 4th test of `Insert Assertion'",
	    (FILL Statements D_IF A = 1 -> EXIT(1)
			       [] A < 2 -> SKIP FI ENDFILL),
	    <1>,
	    TR_Insert_Assertion,
	    < >,
	    (FILL Statements  D_IF A = 1 -> {A=1}; EXIT(1)
				[] A < 2 -> {A<2}; SKIP FI  ENDFILL));

@Test_Trans(" 5th test of `Insert Assertion'",
	    (FILL Statements VAR <X:=1, Y:=2>: SKIP; X:=Y ENDVAR ENDFILL),
	    <1>,
	    TR_Insert_Assertion,
	    < >,
	    "Fail");

@Test_Trans(" 6th test of `Insert Assertion'",
	    (FILL Statements D_DO A = 1 -> EXIT(1)
			       [] A < 2 -> SKIP 
			       [] A = 3 -> D_IF X=1 -> EXIT(1)
					     [] X=2 -> X := 1 FI OD ENDFILL),
	    <1>,
	    TR_Insert_Assertion,
	    < >,
	    (FILL Statements D_DO A = 1 -> {A=1}; EXIT(1)
			       [] A < 2 -> {A<2}; SKIP 
			       [] A = 3 -> {A=3}; D_IF X=1 -> EXIT(1)
						    [] X=2 -> X := 1 FI OD  ENDFILL))


