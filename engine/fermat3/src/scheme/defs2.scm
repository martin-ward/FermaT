(define /-result- '())
(define //A '())
(define //A/K '())
(define //A/S '())
(define //A/S/T/Y/P/E '())
(define //A/S/Type '())
(define //A/S_/Type '())
(define //A1 '())
(define //A2 '())
(define //A3 '())
(define //A4 '())
(define //A5 '())
(define //A_/Proc_/Call_/Filter '())
(define //Action_/Call_/To_/Node '())
(define //Actions '())
(define //Agenda '())
(define //All_/The_/Same '())
(define //Alpha_/Num '())
(define //Assd '())
(define //Assigned '())
(define //Assigs '())
(define //Assigs2 '())
(define //Assns '())
(define //Assume_/A_/S_/Regular '())
(define //B '())
(define //B/B_/End_/Block_/Types '())
(define //B/B_/New_/Block_/Types '())
(define //B/L '())
(define //B/U/G/F/I/X '())
(define //B0 '())
(define //B1 '())
(define //B2 '())
(define //B3 '())
(define //Big_/Indent '())
(define //Bit_/Op '())
(define //Bodies '())
(define //Body '())
(define //Bool_/Ops '())
(define //Budget '())
(define //C '())
(define //C/P_/In_/Preserves_/Dest '())
(define //C/P_/Reg_/To_/Num '())
(define //C/P_/Return_/Code_/Inc '())
(define //C/P_/Return_/Code_/Normal '())
(define //C/P_/Special_/Value '())
(define //C/P_/State '())
(define //C1 '())
(define //C2 '())
(define //Call_/Depth '())
(define //Call_/Path '())
(define //Call_/Types '())
(define //Call_/Types_/Set '())
(define //Calls '())
(define //Calls_/Now '())
(define //Changed '())
(define //Char_/Table '())
(define //Clob '())
(define //Closing_/Toks '())
(define //Cnd '())
(define //Code_/Hash '())
(define //Code_/List '())
(define //Codes '())
(define //Comm_/Ops '())
(define //Comps '())
(define //Con '())
(define //Cond '())
(define //Constants '())
(define //Cs '())
(define //Curr_/Name '())
(define //Current_/Action '())
(define //D '())
(define //D/R/S_/Globals_/To_/Pars_/Done '())
(define //D/S/E/C/T_bad '())
(define //D/S/E/C/T_init '())
(define //D/S/E/C/T_init_count '())
(define //D/S/E/C/T_list '())
(define //D/S/E/C/T_reg '())
(define //D/S/E/C/T_regs '())
(define //D/S/E/C/Ts '())
(define //Data '())
(define //Defn_/Count '())
(define //Depth '())
(define //Digits '())
(define //Dispatch '())
(define //Dispatch_/Nodes '())
(define //Dispatch_/Regs '())
(define //Done_/List '())
(define //E '())
(define //E/X/E/C_/C/I/C/S '())
(define //E1 '())
(define //E2 '())
(define //Else_/Cond '())
(define //Elts '())
(define //End_/Node '())
(define //End_/O/K '())
(define //Entries '())
(define //Entry_/Actions '())
(define //Error_/Count '())
(define //Eval_/Op '())
(define //Eval_/Ops_/Gen '())
(define //Eval_/Ops_/Num '())
(define //Exp '())
(define //Exps '())
(define //Ext_/Call_/Types_/Set '())
(define //F '())
(define //F/Params '())
(define //F/Pars '())
(define //Factor_/Ops '())
(define //Flags '())
(define //Foreach_/Types '())
(define //Found '())
(define //Freq '())
(define //G '())
(define //G/G '())
(define //G1 '())
(define //G2 '())
(define //Globals '())
(define //Guards '())
(define //H '())
(define //Has_/Statements '())
(define //I '())
(define //Idempotent_/Ops '())
(define //Identity_/Value '())
(define //Incs '())
(define //Input '())
(define //Input_/Port '())
(define //Inverse_/Op '())
(define //J '())
(define //J/P '())
(define //Join_/Types1 '())
(define //Join_/Types2 '())
(define //K '())
(define //Key_/Table '())
(define //Keywords '())
(define //L '())
(define //L/T/M_/Types '())
(define //L1 '())
(define //L2 '())
(define //L_/Assoc_/Types '())
(define //Leave_/Alone '())
(define //Lhs '())
(define //List '())
(define //Loop_/Exits '())
(define //M '())
(define //Macro_/Filename '())
(define //Macros '())
(define //Math_/Exps '())
(define //Max '())
(define //Max_/Box_/Chars '())
(define //Max_/Box_/Lines1 '())
(define //Max_/Box_/Lines2 '())
(define //Max_/Call_/Depth '())
(define //Max_/Cond_/Size '())
(define //Max_/Expression_/Size '())
(define //Max_/Indent '())
(define //Max_/Rhomb_/Chars '())
(define //Max_/Subfield '())
(define //Max_/T/V '())
(define //Mem_/Version '())
(define //Message '())
(define //Migration '())
(define //Min '())
(define //Min_/T/V '())
(define //Msize '())
(define //Mth_/Default_/Budget '())
(define //Mth_/Empty '())
(define //Mth_/False '())
(define //Mth_/Ord '())
(define //Mth_/True '())
(define //Mth_0 '())
(define //Mth_1 '())
(define //Mth_m1 '())
(define //N '())
(define //N_/Actions '())
(define //N_/String_/To_/Symbol '())
(define //N_/Symbol_/Table '())
(define //N_/Symbol_/Table_/Length '())
(define //N_/Symbol_/Table_/Next '())
(define //N_/Symbol_/Table_/Size '())
(define //Name '())
(define //Name2/Num '())
(define //Names '())
(define //New '())
(define //New_/Succs '())
(define //Next_/Node '())
(define //Nodes '())
(define //Notused_/Value '())
(define //Num_/Calls '())
(define //Num_/Funct_/Types '())
(define //Num_/Types '())
(define //Num_/Var_/Types '())
(define //O/F/T '())
(define //O/K '())
(define //Old_/Calls '())
(define //Old_/P '())
(define //Old_/Size '())
(define //Omega '())
(define //Only_/Simple_/Types '())
(define //Options '())
(define //Options_/File '())
(define //Orig '())
(define //Orig_/Name '())
(define //Orig_/Pos '())
(define //Output_/Port '())
(define //Output_/Stack '())
(define //P '())
(define //P/L '())
(define //P/P '())
(define //P/P_/Closing '())
(define //P/P_/Indent '())
(define //P/P_/No_/Parentheses '())
(define //P/P_/Non_/Assoc_/Ops '())
(define //P/P_/Opening '())
(define //P/P_/Operator '())
(define //P/P_/Operator1 '())
(define //P/P_/Operator2 '())
(define //P/P_/Prec '())
(define //P/P_/Prec_/Increment '())
(define //P/P_/Split '())
(define //P/P_/Sub_/Indent '())
(define //P/P_/Type '())
(define //P1 '())
(define //P2 '())
(define //Params '())
(define //Patterns '())
(define //Posn_/List '())
(define //Power_/Op '())
(define //Prec_/And '())
(define //Prec_/Diff '())
(define //Prec_/Exponent '())
(define //Prec_/Get '())
(define //Prec_/Intersection '())
(define //Prec_/Mod '())
(define //Prec_/Not '())
(define //Prec_/Or '())
(define //Prec_/Plus '())
(define //Prec_/Rel '())
(define //Prec_/Struct '())
(define //Prec_/Times '())
(define //Prec_/Union '())
(define //Preds '())
(define //Prefix_/Conds '())
(define //Prev '())
(define //Prev_/Width '())
(define //Previous '())
(define //Printing '())
(define //Proc_/Data '())
(define //Proc_/Defns '())
(define //Proc_/Stack '())
(define //Proc_/Summaries '())
(define //Procs_/Done '())
(define //Proper_/T/Vs_/Set '())
(define //Q '())
(define //Qry_/A_/Proc_/Calls '())
(define //Qry_/B/L_/Metric '())
(define //Qry_/C/F/D/F_/Metric '())
(define //Qry_/Calls '())
(define //Qry_/Clobbered '())
(define //Qry_/Elts '())
(define //Qry_/Elts_/Redefined '())
(define //Qry_/Elts_/U/B/A '())
(define //Qry_/Funct_/Calls '())
(define //Qry_/Hyb_/T/Vs '())
(define //Qry_/Max_/Dep '())
(define //Qry_/Max_/Pos_/L '())
(define //Qry_/Mc/Cabe_/Metric '())
(define //Qry_/P/P_/Size '())
(define //Qry_/P/P_/String '())
(define //Qry_/Proc_/Calls '())
(define //Qry_/Rec_/T/Vs '())
(define //Qry_/Redefined '())
(define //Qry_/Reg_/T/Vs '())
(define //Qry_/Simple '())
(define //Qry_/Spec_/Types '())
(define //Qry_/Stat_/Count '())
(define //Qry_/Stat_/Count_/N/C '())
(define //Qry_/Statements '())
(define //Qry_/Struct_/Metric '())
(define //Qry_/Total_/Size '())
(define //Qry_/U/B/A '())
(define //Qry_/Var_/Name '())
(define //Qry_/Vars '())
(define //Qry_/X_/Funct_/Calls '())
(define //R '())
(define //R1 '())
(define //R2 '())
(define //Reach '())
(define //Rec '())
(define //Redef '())
(define //Redf '())
(define //Registers '())
(define //Rel_/Ops '())
(define //Replace '())
(define //Replacement_/Expression '())
(define //Reserved_/Words '())
(define //Result '())
(define //Return_/Node '())
(define //Return_/Regs '())
(define //Reverse_/Op '())
(define //Runtime_/Flow '())
(define //S '())
(define //S/C '())
(define //S/S '())
(define //S/S/A_blocks '())
(define //S/T '())
(define //S1 '())
(define //S2 '())
(define //S2_/Par_/Count '())
(define //S3 '())
(define //S4 '())
(define //S5 '())
(define //S_/A/B/O/R/T '())
(define //S_/A/B/S '())
(define //S_/A/C/T/I/O/N '())
(define //S_/A/C/T/I/O/N/S '())
(define //S_/A/D/D/R '())
(define //S_/A/N/D '())
(define //S_/A/R/R/A/Y '())
(define //S_/A/R/R/O/W '())
(define //S_/A/S/S/I/G/N '())
(define //S_/A/S/S/I/G/N/S '())
(define //S_/A/T '())
(define //S_/A/T/E/A/C/H '())
(define //S_/A/T_/P/A/T_/O/N/E '())
(define //S_/Atom_/Ops '())
(define //S_/B/A/C/K/S/L/A/S/H '())
(define //S_/B/E/C/O/M/E/S '())
(define //S_/B/E/G/I/N '())
(define //S_/B/F/U/N/C/T '())
(define //S_/B/O/X '())
(define //S_/B/U/T/L/A/S/T '())
(define //S_/C/A/L/L '())
(define //S_/C/A/R/E/T '())
(define //S_/C/O/L/O/N '())
(define //S_/C/O/L/O/N/C/O/L/O/N '())
(define //S_/C/O/M/M/A '())
(define //S_/C/O/M/M/E/N/T '())
(define //S_/C/O/N/C/A/T '())
(define //S_/C/O/N/D/I/T/I/O/N '())
(define //S_/C/O/N/D_/P/L/A/C/E '())
(define //S_/D/E/F/I/N/E '())
(define //S_/D/E/F/I/N/I/T/I/O/N '())
(define //S_/D/E/F/I/N/I/T/I/O/N/S '())
(define //S_/D/I/V '())
(define //S_/D/O '())
(define //S_/D/O/T/D/O/T '())
(define //S_/D/O/T/S/P/A/C/E '())
(define //S_/D_/D/O '())
(define //S_/D_/I/F '())
(define //S_/E/L/S/E '())
(define //S_/E/L/S/I/F '())
(define //S_/E/M/P/T/Y '())
(define //S_/E/N/D '())
(define //S_/E/N/D/A/C/T/I/O/N/S '())
(define //S_/E/N/D/F/I/L/L '())
(define //S_/E/N/D/J/O/I/N '())
(define //S_/E/N/D/M/A/T/C/H '())
(define //S_/E/N/D/S/P/E/C '())
(define //S_/E/N/D/V/A/R '())
(define //S_/E/O/F '())
(define //S_/E/Q/U/A/L '())
(define //S_/E/R/R/O/R '())
(define //S_/E/V/E/N '())
(define //S_/E/X/I/S/T/S '())
(define //S_/E/X/I/T '())
(define //S_/E/X/P/N_/P/L/A/C/E '())
(define //S_/E/X/P/O/N/E/N/T '())
(define //S_/E/X/P/R/E/S/S/I/O/N '())
(define //S_/E/X/P/R/E/S/S/I/O/N/S '())
(define //S_/F/A/L/S/E '())
(define //S_/F/I '())
(define //S_/F/I/L/L '())
(define //S_/F/I/L/L1 '())
(define //S_/F/O/R '())
(define //S_/F/O/R/A/L/L '())
(define //S_/F/O/R/E/A/C/H '())
(define //S_/F/R/A/C '())
(define //S_/F/U/L/L/S/T/O/P '())
(define //S_/F/U/N/C/T '())
(define //S_/Factor_/Ops '())
(define //S_/G/E/Q '())
(define //S_/G/L/O/B/A/L '())
(define //S_/G/U/A/R/D/E/D '())
(define //S_/H/A/S/H_/T/A/B/L/E '())
(define //S_/H/E/A/D '())
(define //S_/I/D/E/N/T/I/F/I/E/R '())
(define //S_/I/F '())
(define //S_/I/F/M/A/T/C/H '())
(define //S_/I/N '())
(define //S_/I/N/D/E/X '())
(define //S_/I/N/T '())
(define //S_/I/N/T/E/R/S/E/C/T '())
(define //S_/I/N/T/S '())
(define //S_/I/N/T_/A/N/Y '())
(define //S_/I/N/T_/O/N/E '())
(define //S_/I/N/V/A/L/I/D '())
(define //S_/J/O/I/N '())
(define //S_/L/A/N/G/L/E '())
(define //S_/L/A/S/T '())
(define //S_/L/B/R/A/C/E '())
(define //S_/L/B/R/A/C/K/E/T '())
(define //S_/L/E/N/G/T/H '())
(define //S_/L/E/Q '())
(define //S_/L/P/A/R/E/N '())
(define //S_/L/V/A/L/U/E '())
(define //S_/L/V/A/L/U/E/S '())
(define //S_/M/A/P '())
(define //S_/M/A/P/H/A/S/H '())
(define //S_/M/A/X '())
(define //S_/M/E/M '())
(define //S_/M/E/M/B/E/R '())
(define //S_/M/I/N '())
(define //S_/M/I/N/U/S '())
(define //S_/M/O/D '())
(define //S_/M/W_/B/F/U/N/C/T '())
(define //S_/M/W_/F/U/N/C/T '())
(define //S_/M/W_/P/R/O/C '())
(define //S_/N/A/S '())
(define //S_/N/A/T/S '())
(define //S_/N/E/Q '())
(define //S_/N/O/T '())
(define //S_/N/O/T/I/N '())
(define //S_/N/U/M/B/E/R '())
(define //S_/N/U/M/B/E/R/Q '())
(define //S_/O/D '())
(define //S_/O/D/D '())
(define //S_/O/R '())
(define //S_/P/A/T_/A/N/Y '())
(define //S_/P/A/T_/M/A/N/Y '())
(define //S_/P/A/T_/O/N/E '())
(define //S_/P/L/I/N/K_/P '())
(define //S_/P/L/I/N/K_/X/C '())
(define //S_/P/L/I/N/K_/X/F '())
(define //S_/P/L/I/N/K_/X/P '())
(define //S_/P/L/U/S '())
(define //S_/P/O/P '())
(define //S_/P/O/W/E/R/S/E/T '())
(define //S_/P/R/I/M/E '())
(define //S_/P/R/I/N/F/L/U/S/H '())
(define //S_/P/R/I/N/T '())
(define //S_/P/R/O/C '())
(define //S_/P/U/S/H '())
(define //S_/Par_/Count '())
(define //S_/Q/U/E/R/Y '())
(define //S_/Q/U/O/T/E/S '())
(define //S_/R/A/N/G/L/E '())
(define //S_/R/A/T/S '())
(define //S_/R/B/R/A/C/E '())
(define //S_/R/B/R/A/C/K/E/T '())
(define //S_/R/E/A/L/S '())
(define //S_/R/E/D/U/C/E '())
(define //S_/R/E/T/U/R/N/S '())
(define //S_/R/E/V/E/R/S/E '())
(define //S_/R/P/A/R/E/N '())
(define //S_/S/C/O/P/A/R/E/N '())
(define //S_/S/E/M/I/C/O/L/O/N '())
(define //S_/S/E/Q/U/E/N/C/E '())
(define //S_/S/G/N '())
(define //S_/S/K/I/P '())
(define //S_/S/L/A/S/H '())
(define //S_/S/L/E/N/G/T/H '())
(define //S_/S/P/E/C '())
(define //S_/S/T/A/T/E/M/E/N/T '())
(define //S_/S/T/A/T/E/M/E/N/T/S '())
(define //S_/S/T/A/T_/P/L/A/C/E '())
(define //S_/S/T/E/P '())
(define //S_/S/T/R/I/N/G '())
(define //S_/S/T/R/I/N/G/B/F '())
(define //S_/S/T/S '())
(define //S_/S/U/B/S/E/T '())
(define //S_/S/U/B/S/T/R '())
(define //S_/T/A/I/L '())
(define //S_/T/E/R/M/I/N/A/L '())
(define //S_/T/H/E/N '())
(define //S_/T/I/M/E/S '())
(define //S_/T/O '())
(define //S_/T/R/U/E '())
(define //S_/Tail_/Recursive_/Call '())
(define //S_/Term_/Ops '())
(define //S_/U/N/I/O/N '())
(define //S_/V/A/R '())
(define //S_/V/A/R/I/A/B/L/E '())
(define //S_/V/A/R_/A/N/Y '())
(define //S_/V/A/R_/O/N/E '())
(define //S_/V/A/R_/P/L/A/C/E '())
(define //S_/V/B/A/R '())
(define //S_/W/H/E/R/E '())
(define //S_/W/H/I/L/E '())
(define //Scheme_/Call '())
(define //Scheme_/Decl '())
(define //Scheme_/Fill '())
(define //Scheme_/Funct '())
(define //Scheme_/Ifmatch '())
(define //Scheme_/Literal '())
(define //Scheme_/Special '())
(define //Self '())
(define //Seq '())
(define //Seq_/Exps '())
(define //Single_/Chars '())
(define //Size '())
(define //Spaces '())
(define //Span '())
(define //Spec_/To_/Gen_/Type '())
(define //Special_/Chars '())
(define //Special_/Or_/White '())
(define //Start '())
(define //Starting_/Action '())
(define //State_/Saves '())
(define //Subgraph '())
(define //Subgraph_/N '())
(define //Succ '())
(define //Succs '())
(define //Swap_/Case '())
(define //Syn '())
(define //Syntax_/Any_/Int '())
(define //Syntax_/Any_/Pattern '())
(define //Syntax_/Any_/Var '())
(define //Syntax_/Comps '())
(define //Syntax_/E_/To_/V '())
(define //Syntax_/Fill '())
(define //Syntax_/Ifmatch '())
(define //Syntax_/List '())
(define //Syntax_/Many_/Pattern '())
(define //Syntax_/Name '())
(define //Syntax_/One_/Int '())
(define //Syntax_/One_/Pattern '())
(define //Syntax_/One_/Var '())
(define //Syntax_/Type '())
(define //Syntax_/V_/To_/E '())
(define //Syntax_/Value '())
(define //T '())
(define //T/C '())
(define //T/N '())
(define //T/R_/Abort_/Processing '())
(define //T/R_/Absorb_/Left '())
(define //T/R_/Absorb_/Right '())
(define //T/R_/Actions_/To_/Procs '())
(define //T/R_/Actions_/To_/Where '())
(define //T/R_/Add_/Assertion '())
(define //T/R_/Add_/Left '())
(define //T/R_/Add_/Loop_/To_/Action '())
(define //T/R_/Align_/Nested_/Statements '())
(define //T/R_/Align_/Nested_/Vars '())
(define //T/R_/All_/Proc_/Stacks_/To_/Pars '())
(define //T/R_/All_/Push_/Pop '())
(define //T/R_/Apply_/To_/Right '())
(define //T/R_/Array_/To_/Vars '())
(define //T/R_/Collapse_/Action_/System '())
(define //T/R_/Collapse_/All_/Systems '())
(define //T/R_/Combine_/Wheres '())
(define //T/R_/Constant_/Propagation '())
(define //T/R_/D_/Do_/To_/Floop '())
(define //T/R_/Decrement_/Statement '())
(define //T/R_/Delete_/All_/Assertions '())
(define //T/R_/Delete_/All_/Comments '())
(define //T/R_/Delete_/All_/Redundant '())
(define //T/R_/Delete_/All_/Skips '())
(define //T/R_/Delete_/Item '())
(define //T/R_/Delete_/Redundant_/Regs '())
(define //T/R_/Delete_/Redundant_/Statement '())
(define //T/R_/Delete_/Unreachable_/Code '())
(define //T/R_/Delete_/What_/Follows '())
(define //T/R_/Double_/To_/Single_/Loop '())
(define //T/R_/Else_/If_/To_/Elsif '())
(define //T/R_/Elsif_/To_/Else_/If '())
(define //T/R_/Expand_/And_/Separate '())
(define //T/R_/Expand_/And_/Separate_/All '())
(define //T/R_/Expand_/Call '())
(define //T/R_/Expand_/Forward '())
(define //T/R_/Find_/Terminals '())
(define //T/R_/Fix_/Dispatch '())
(define //T/R_/Flag_/Removal '())
(define //T/R_/Floop_/To_/While '())
(define //T/R_/For_/In_/To_/Reduce '())
(define //T/R_/For_/To_/While '())
(define //T/R_/Force_/Double_/To_/Single_/Loop '())
(define //T/R_/Fully_/Absorb_/Right '())
(define //T/R_/Fully_/Expand_/Forward '())
(define //T/R_/Globalise_/Procs '())
(define //T/R_/Globals_/To_/Pars '())
(define //T/R_/Ifmatch_/Processing '())
(define //T/R_/Increment_/Statement '())
(define //T/R_/Insert_/Assertion '())
(define //T/R_/Join_/All_/Cases '())
(define //T/R_/Join_/Cases_/Left '())
(define //T/R_/Join_/Cases_/Right '())
(define //T/R_/Localise_/Procs '())
(define //T/R_/Loop_/Doubling '())
(define //T/R_/Loop_/Inversion '())
(define //T/R_/Loop_/To_/Move '())
(define //T/R_/Make_/Loop '())
(define //T/R_/Make_/Proc '())
(define //T/R_/Make_/Reducible '())
(define //T/R_/Merge_/Calls_/In_/Action '())
(define //T/R_/Merge_/Calls_/In_/System '())
(define //T/R_/Merge_/Cond_/Right '())
(define //T/R_/Merge_/Left '())
(define //T/R_/Merge_/Right '())
(define //T/R_/Meta_/Trans '())
(define //T/R_/Move_/Comment_/Left '())
(define //T/R_/Move_/Comment_/Right '())
(define //T/R_/Move_/Comments '())
(define //T/R_/Move_/To_/Left '())
(define //T/R_/Move_/To_/Right '())
(define //T/R_/No_/Change '())
(define //T/R_/Partially_/Join_/Cases '())
(define //T/R_/Proc_/To_/Funct '())
(define //T/R_/Prog_/To_/Spec '())
(define //T/R_/Prune_/Dispatch '())
(define //T/R_/Push_/Pop '())
(define //T/R_/Recursion_/To_/Loop '())
(define //T/R_/Reduce_/Loop '())
(define //T/R_/Reduce_/Multiple_/Loops '())
(define //T/R_/Refine_/Spec '())
(define //T/R_/Remove_/All_/Redundant_/Vars '())
(define //T/R_/Remove_/Dummy_/Loop '())
(define //T/R_/Remove_/Redundant_/Vars '())
(define //T/R_/Rename_/Defns '())
(define //T/R_/Rename_/Local_/Vars '())
(define //T/R_/Rename_/Proc '())
(define //T/R_/Replace_/Accs_/With_/Value '())
(define //T/R_/Replace_/With_/Value '())
(define //T/R_/Replace_/With_/Variable '())
(define //T/R_/Restore_/Local_/Vars '())
(define //T/R_/Reverse_/Order '())
(define //T/R_/Roll_/Loop '())
(define //T/R_/Semantic_/Slice '())
(define //T/R_/Separate_/Both '())
(define //T/R_/Separate_/Exit_/Code '())
(define //T/R_/Separate_/Left '())
(define //T/R_/Separate_/Right '())
(define //T/R_/Simple_/Slice '())
(define //T/R_/Simplify '())
(define //T/R_/Simplify_/Action_/System '())
(define //T/R_/Simplify_/If '())
(define //T/R_/Simplify_/Item '())
(define //T/R_/Sort_/Procs '())
(define //T/R_/Stack_/To_/Par '())
(define //T/R_/Stack_/To_/Return '())
(define //T/R_/Stack_/To_/Var '())
(define //T/R_/Static_/Single_/Assignment '())
(define //T/R_/Substitute_/And_/Delete '())
(define //T/R_/Substitute_/And_/Delete_/List '())
(define //T/R_/Syntactic_/Slice '())
(define //T/R_/Take_/Out_/Left '())
(define //T/R_/Take_/Out_/Of_/Loop '())
(define //T/R_/Take_/Out_/Right '())
(define //T/R_/Unfold_/Proc_/Call '())
(define //T/R_/Unfold_/Proc_/Calls '())
(define //T/R_/Unroll_/Loop '())
(define //T/R_/Use_/Assertion '())
(define //T/R_/Var_/Pars_/To_/Val_/Pars '())
(define //T/R_/While_/To_/Abort '())
(define //T/R_/While_/To_/Floop '())
(define //T/R_/While_/To_/For_/In '())
(define //T/R_/While_/To_/Reduce '())
(define //T/Rs_/Code '())
(define //T/Rs_/Data_/Gen_/Type '())
(define //T/Rs_/Help '())
(define //T/Rs_/Keywords '())
(define //T/Rs_/Name '())
(define //T/Rs_/Proc_/Name '())
(define //T/Rs_/Prompt '())
(define //T/Rs_/Test '())
(define //T/V '())
(define //T/Vs '())
(define //T_/A_/Proc_/Call '())
(define //T_/A_/S '())
(define //T_/Abort '())
(define //T_/Abs '())
(define //T_/Action '())
(define //T_/Action_/Int_/Any '())
(define //T_/Action_/Int_/One '())
(define //T_/Action_/Pat_/Any '())
(define //T_/Action_/Pat_/Many '())
(define //T_/Action_/Pat_/One '())
(define //T_/Action_/Var_/Any '())
(define //T_/Action_/Var_/One '())
(define //T_/Actions '())
(define //T_/Address_/Of '())
(define //T_/And '())
(define //T_/Aref '())
(define //T_/Aref_/Lvalue '())
(define //T_/Array '())
(define //T_/Assert '())
(define //T_/Assign '())
(define //T_/Assign_/Int_/Any '())
(define //T_/Assign_/Int_/One '())
(define //T_/Assign_/Pat_/Any '())
(define //T_/Assign_/Pat_/Many '())
(define //T_/Assign_/Pat_/One '())
(define //T_/Assign_/Var_/Any '())
(define //T_/Assign_/Var_/One '())
(define //T_/Assignment '())
(define //T_/Assigns '())
(define //T_/Ateach_/Cond '())
(define //T_/Ateach_/Expn '())
(define //T_/Ateach_/Global_/Var '())
(define //T_/Ateach_/Lvalue '())
(define //T_/Ateach_/N/A/S '())
(define //T_/Ateach_/S/T/S '())
(define //T_/Ateach_/Stat '())
(define //T_/Ateach_/Stats '())
(define //T_/Ateach_/T/S '())
(define //T_/Ateach_/T/Ss '())
(define //T_/Ateach_/Variable '())
(define //T_/B/Funct '())
(define //T_/B/Funct_/Call '())
(define //T_/Butlast '())
(define //T_/Call '())
(define //T_/Comment '())
(define //T_/Concat '())
(define //T_/Cond '())
(define //T_/Cond_/Int_/Any '())
(define //T_/Cond_/Int_/One '())
(define //T_/Cond_/Pat_/Any '())
(define //T_/Cond_/Pat_/Many '())
(define //T_/Cond_/Pat_/One '())
(define //T_/Cond_/Place '())
(define //T_/Cond_/Var_/Any '())
(define //T_/Cond_/Var_/One '())
(define //T_/Condition '())
(define //T_/D_/Do '())
(define //T_/D_/If '())
(define //T_/Datatype '())
(define //T_/Datatype_/Array '())
(define //T_/Datatype_/Integer '())
(define //T_/Datatype_/String '())
(define //T_/Datatype_/Struct '())
(define //T_/Declare_/Datatype '())
(define //T_/Definition '())
(define //T_/Definitions '())
(define //T_/Defn_/Int_/Any '())
(define //T_/Defn_/Int_/One '())
(define //T_/Defn_/Pat_/Any '())
(define //T_/Defn_/Pat_/Many '())
(define //T_/Defn_/Pat_/One '())
(define //T_/Defn_/Var_/Any '())
(define //T_/Defn_/Var_/One '())
(define //T_/Div '())
(define //T_/Divide '())
(define //T_/Empty '())
(define //T_/Equal '())
(define //T_/Error '())
(define //T_/Even '())
(define //T_/Exists '())
(define //T_/Exit '())
(define //T_/Expn_/Datatype '())
(define //T_/Expn_/Int_/Any '())
(define //T_/Expn_/Int_/One '())
(define //T_/Expn_/Pat_/Any '())
(define //T_/Expn_/Pat_/Many '())
(define //T_/Expn_/Pat_/One '())
(define //T_/Expn_/Place '())
(define //T_/Expn_/Var_/Any '())
(define //T_/Expn_/Var_/One '())
(define //T_/Exponent '())
(define //T_/Expression '())
(define //T_/Expressions '())
(define //T_/False '())
(define //T_/Fill_/Action '())
(define //T_/Fill_/Assign '())
(define //T_/Fill_/Assigns '())
(define //T_/Fill_/Cond '())
(define //T_/Fill_/Defn '())
(define //T_/Fill_/Defns '())
(define //T_/Fill_/Expn '())
(define //T_/Fill_/Expns '())
(define //T_/Fill_/Guarded '())
(define //T_/Fill_/Lvalue '())
(define //T_/Fill_/Lvalues '())
(define //T_/Fill_/Stat '())
(define //T_/Fill_/Stats '())
(define //T_/Final_/Seg '())
(define //T_/Final_/Seg_/Lvalue '())
(define //T_/Floop '())
(define //T_/For '())
(define //T_/For_/In '())
(define //T_/Forall '())
(define //T_/Foreach_/Cond '())
(define //T_/Foreach_/Expn '())
(define //T_/Foreach_/Global_/Var '())
(define //T_/Foreach_/Lvalue '())
(define //T_/Foreach_/N/A/S '())
(define //T_/Foreach_/S/T/S '())
(define //T_/Foreach_/Stat '())
(define //T_/Foreach_/Stats '())
(define //T_/Foreach_/T/S '())
(define //T_/Foreach_/T/Ss '())
(define //T_/Foreach_/Variable '())
(define //T_/Frac '())
(define //T_/Funct '())
(define //T_/Funct_/Call '())
(define //T_/Get '())
(define //T_/Get_n '())
(define //T_/Gethash '())
(define //T_/Greater '())
(define //T_/Greater_/Eq '())
(define //T_/Guarded '())
(define //T_/Guarded_/Int_/Any '())
(define //T_/Guarded_/Int_/One '())
(define //T_/Guarded_/Pat_/Any '())
(define //T_/Guarded_/Pat_/Many '())
(define //T_/Guarded_/Pat_/One '())
(define //T_/Guarded_/Var_/Any '())
(define //T_/Guarded_/Var_/One '())
(define //T_/Guardeds '())
(define //T_/Hash_/Table '())
(define //T_/Head '())
(define //T_/If '())
(define //T_/Ifmatch_/Action '())
(define //T_/Ifmatch_/Assign '())
(define //T_/Ifmatch_/Assigns '())
(define //T_/Ifmatch_/Cond '())
(define //T_/Ifmatch_/Defn '())
(define //T_/Ifmatch_/Defns '())
(define //T_/Ifmatch_/Expn '())
(define //T_/Ifmatch_/Expns '())
(define //T_/Ifmatch_/Guarded '())
(define //T_/Ifmatch_/Lvalue '())
(define //T_/Ifmatch_/Lvalues '())
(define //T_/Ifmatch_/Stat '())
(define //T_/Ifmatch_/Stats '())
(define //T_/Implies '())
(define //T_/In '())
(define //T_/Index '())
(define //T_/Int '())
(define //T_/Intersection '())
(define //T_/Invert '())
(define //T_/Join '())
(define //T_/Last '())
(define //T_/Length '())
(define //T_/Less '())
(define //T_/Less_/Eq '())
(define //T_/Lvalue '())
(define //T_/Lvalue_/Datatype '())
(define //T_/Lvalue_/Int_/Any '())
(define //T_/Lvalue_/Int_/One '())
(define //T_/Lvalue_/Pat_/Any '())
(define //T_/Lvalue_/Pat_/Many '())
(define //T_/Lvalue_/Pat_/One '())
(define //T_/Lvalue_/Var_/Any '())
(define //T_/Lvalue_/Var_/One '())
(define //T_/Lvalues '())
(define //T_/M/W_/B/Funct '())
(define //T_/M/W_/B/Funct_/Call '())
(define //T_/M/W_/Funct '())
(define //T_/M/W_/Funct_/Call '())
(define //T_/M/W_/Proc '())
(define //T_/M/W_/Proc_/Call '())
(define //T_/Map '())
(define //T_/Maphash '())
(define //T_/Max '())
(define //T_/Mem '())
(define //T_/Mem_/Lvalue '())
(define //T_/Mem_/Rel '())
(define //T_/Mem_/Rel_/Lvalue '())
(define //T_/Mem_/Seg '())
(define //T_/Mem_/Seg_/Lvalue '())
(define //T_/Member '())
(define //T_/Min '())
(define //T_/Minus '())
(define //T_/Mod '())
(define //T_/Name '())
(define //T_/Name_/Int_/One '())
(define //T_/Name_/Pat_/One '())
(define //T_/Name_/Var_/One '())
(define //T_/Negate '())
(define //T_/Not '())
(define //T_/Not_/Equal '())
(define //T_/Not_/In '())
(define //T_/Number '())
(define //T_/Numberq '())
(define //T_/Odd '())
(define //T_/Or '())
(define //T_/Plus '())
(define //T_/Pop '())
(define //T_/Powerset '())
(define //T_/Primed_/Var '())
(define //T_/Prinflush '())
(define //T_/Print '())
(define //T_/Proc '())
(define //T_/Proc_/Call '())
(define //T_/Push '())
(define //T_/Puthash '())
(define //T_/Reduce '())
(define //T_/Rel_/Seg '())
(define //T_/Rel_/Seg_/Lvalue '())
(define //T_/Reverse '())
(define //T_/Sequence '())
(define //T_/Sequenceq '())
(define //T_/Set '())
(define //T_/Set_/Diff '())
(define //T_/Sgn '())
(define //T_/Skip '())
(define //T_/Slength '())
(define //T_/Spec '())
(define //T_/Stat_/Int_/Any '())
(define //T_/Stat_/Int_/One '())
(define //T_/Stat_/Pat_/Any '())
(define //T_/Stat_/Pat_/Many '())
(define //T_/Stat_/Pat_/One '())
(define //T_/Stat_/Place '())
(define //T_/Stat_/Var_/Any '())
(define //T_/Stat_/Var_/One '())
(define //T_/Statement '())
(define //T_/Statements '())
(define //T_/String '())
(define //T_/Stringq '())
(define //T_/Struct '())
(define //T_/Struct_/Lvalue '())
(define //T_/Sub_/Seg '())
(define //T_/Sub_/Seg_/Lvalue '())
(define //T_/Subset '())
(define //T_/Substr '())
(define //T_/Tail '())
(define //T_/Times '())
(define //T_/True '())
(define //T_/Typedef '())
(define //T_/Union '())
(define //T_/Var '())
(define //T_/Var_/Lvalue '())
(define //T_/Var_/Place '())
(define //T_/Variable '())
(define //T_/Where '())
(define //T_/While '())
(define //T_/X_/B/Funct_/Call '())
(define //T_/X_/Funct_/Call '())
(define //T_/X_/Proc_/Call '())
(define //Take_/Out '())
(define //Target '())
(define //Temp '())
(define //Temp_/I '())
(define //Temp_/P '())
(define //Term_/Ops '())
(define //Term_/Posn '())
(define //Term_/V '())
(define //Text '())
(define //Text_/Width '())
(define //The_/Assigns '())
(define //Thin_/Back_/Edges '())
(define //Type '())
(define //Type_/Ifmatch '())
(define //Type_/Infix '())
(define //Type_/Prefix '())
(define //Type_/Simple '())
(define //Type_/Special '())
(define //Type_/Split '())
(define //Type_/Table '())
(define //Types '())
(define //U '())
(define //U/B/A '())
(define //Undefined_/Value '())
(define //Unfold_/Dispatch '())
(define //Used '())
(define //V '())
(define //V/L '())
(define //Valid '())
(define //Var_/F/Params '())
(define //Var_/Params '())
(define //Vcons '())
(define //Vcons_vals '())
(define //W '())
(define //W/P '())
(define //W/P_/T '())
(define //W/P_/Types_/Set '())
(define //W/S/L_/Option_/Quiet '())
(define //W/S_/Funct '())
(define //W/S_/Indent_/Pending '())
(define //W/S_/Indents '())
(define //W/S_/Nesting '())
(define //W/S_/Type '())
(define //W/S_/X_/Pos '())
(define //Whitespace '())
(define //X '())
(define //Z '())
(define //Z_called '())
(define //Zero_/Value '())
(define /__/Match_array '())
(define /__/O/K '())
(define /a '())
(define /a1 '())
(define /a2 '())
(define /a3 '())
(define /a4 '())
(define /a_name '())
(define /a_name_lvar '())
(define /a_name_var '())
(define /a_prefix_ops '())
(define /accs '())
(define /action '())
(define /actions '())
(define /actual '())
(define /actual_pars '())
(define /actual_vals '())
(define /actual_vars '())
(define /add_assertions '())
(define /add_par '())
(define /addr '())
(define /addr_vars '())
(define /address_of '())
(define /address_of_name '())
(define /adt_/Buffer '())
(define /adt_/Command_/Future '())
(define /adt_/Command_/History '())
(define /adt_/Command_/List '())
(define /adt_/Data '())
(define /adt_/Dummy_/Guarded '())
(define /adt_/Edit_/Posn_/Stack '())
(define /adt_/Edit_/Program_/Stack '())
(define /adt_/Edit_/To_/Stack '())
(define /adt_/Fail_/Message '())
(define /adt_/In_/A_/Trans '())
(define /adt_/Item '())
(define /adt_/Passed '())
(define /adt_/Path_/Items '())
(define /adt_/Posn '())
(define /adt_/Posn_/Future '())
(define /adt_/Posn_/History '())
(define /adt_/Posn_n '())
(define /adt_/Program '())
(define /adt_/Program_/Future '())
(define /adt_/Program_/History '())
(define /adt_/Skip_/Statement '())
(define /adt_/Skip_/Statements '())
(define /adt_/T/R_/Next_/Number '())
(define /adt_/T/R_/Start_/P '())
(define /adt_/T/R_/Start_/Span '())
(define /adt_/Trans_/Count '())
(define /adt_/Trans_/Tests '())
(define /all_inits '())
(define /aname '())
(define /apar '())
(define /ar '())
(define /arg '())
(define /arg1 '())
(define /args '())
(define /arrays '())
(define /as '())
(define /ass '())
(define /assert '())
(define /assign '())
(define /assign0 '())
(define /assign1 '())
(define /assign2 '())
(define /assigned '())
(define /assigned1 '())
(define /assigns '())
(define /b '())
(define /bad '())
(define /bad_var '())
(define /base '())
(define /big '())
(define /bigname '())
(define /bignum '())
(define /bin '())
(define /bit '())
(define /bit_and '())
(define /bit_ops '())
(define /bit_or '())
(define /bit_xor '())
(define /block '())
(define /block_file '())
(define /blocks '())
(define /bodies '())
(define /body '())
(define /body_var '())
(define /bottom '())
(define /budget '())
(define /c '())
(define /c1 '())
(define /c2 '())
(define /call '())
(define /call_/Z '())
(define /call_budget '())
(define /call_depth '())
(define /call_dn '())
(define /call_graph '())
(define /call_n '())
(define /call_stack '())
(define /call_types '())
(define /call_via_ptr '())
(define /call_via_ptr_pars '())
(define /call_zn '())
(define /calls '())
(define /calls_ok '())
(define /calls_processed '())
(define /calls_z '())
(define /cc '())
(define /cc_assigned '())
(define /cc_name '())
(define /cc_val '())
(define /cc_values '())
(define /cf_name '())
(define /chain_reg '())
(define /change '())
(define /changed '())
(define /char_table '())
(define /chars '())
(define /chars1 '())
(define /class '())
(define /clobber '())
(define /clobber1 '())
(define /clobber2 '())
(define /clobbered '())
(define /close '())
(define /closes '())
(define /code '())
(define /codes '())
(define /col_no '())
(define /comment '())
(define /comments '())
(define /common '())
(define /comp '())
(define /comp1 '())
(define /comp2 '())
(define /comps '())
(define /cond '())
(define /condition '())
(define /cons '())
(define /constants '())
(define /cont '())
(define /control '())
(define /controls '())
(define /count '())
(define /count1 '())
(define /count2 '())
(define /cstack '())
(define /d '())
(define /d1 '())
(define /d2 '())
(define /data '())
(define /date_time_functs '())
(define /dats '())
(define /dec_conds '())
(define /defines '())
(define /defn '())
(define /defns '())
(define /defs '())
(define /del_file '())
(define /delete '())
(define /deletes '())
(define /delimit '())
(define /denom '())
(define /deny '())
(define /dest '())
(define /dest_occ '())
(define /dest_value '())
(define /destination '())
(define /dfs '())
(define /dfs_num '())
(define /diff '())
(define /digit '())
(define /digits '())
(define /dispatch '())
(define /dispatch_call '())
(define /dispatch_called '())
(define /dispatch_codes '())
(define /dispatch_n '())
(define /dispatch_node '())
(define /dispatch_posn '())
(define /dist '())
(define /div '())
(define /dn '())
(define /doit '())
(define /done '())
(define /double '())
(define /dsects '())
(define /dsects_done '())
(define /dummy '())
(define /dummy_compiler_data '())
(define /e '())
(define /e1 '())
(define /e2 '())
(define /e3 '())
(define /e4 '())
(define /e5 '())
(define /e_to_v '())
(define /e_to_v_l '())
(define /effective_size '())
(define /effort '())
(define /el '())
(define /else '())
(define /elt '())
(define /elts '())
(define /empty/E '())
(define /empty/L '())
(define /end '())
(define /end/L '())
(define /entry '())
(define /entry/L '())
(define /entry_point '())
(define /ess_file '())
(define /exit '())
(define /exit_flag '())
(define /exp '())
(define /exp_sgn '())
(define /expansions '())
(define /expn '())
(define /expns '())
(define /exponent '())
(define /exps '())
(define /extra '())
(define /f '())
(define /factors '())
(define /false '())
(define /fix_last '())
(define /fl_flag/X '())
(define /fl_flag1 '())
(define /fl_flag2 '())
(define /fl_flag3 '())
(define /fl_flag4 '())
(define /fl_flag5 '())
(define /fl_flag6 '())
(define /fl_flag7 '())
(define /fl_flag8 '())
(define /fl_flag9 '())
(define /flag '())
(define /flag2name '())
(define /flag_n '())
(define /flag_posn '())
(define /flag_val '())
(define /flags '())
(define /floop '())
(define /floop_depth '())
(define /footer '())
(define /foreach '())
(define /formal_pars '())
(define /formal_vals '())
(define /formal_vars '())
(define /forward_edge '())
(define /found '())
(define /freq '())
(define /fringe '())
(define /funct '())
(define /funct_result '())
(define /g_exp_types '())
(define /g_prefix_ops '())
(define /gap '())
(define /global_calls '())
(define /globals '())
(define /good '())
(define /guard '())
(define /guarded '())
(define /guards '())
(define /head '())
(define /heads '())
(define /hex '())
(define /hsaved '())
(define /i '())
(define /i1 '())
(define /i2 '())
(define /i3 '())
(define /ignore '())
(define /inc '())
(define /ind '())
(define /index '())
(define /index_vars '())
(define /indexes '())
(define /init '())
(define /init/L '())
(define /initial_call_budget '())
(define /inits '())
(define /inline_par '())
(define /intersect1 '())
(define /intersect2 '())
(define /inverts '())
(define /item '())
(define /j '())
(define /k '())
(define /keep '())
(define /keep_vals '())
(define /keep_vars '())
(define /key '())
(define /l '())
(define /label '())
(define /last '())
(define /last/L '())
(define /last_inc '())
(define /last_posn '())
(define /len '())
(define /lhs '())
(define /line '())
(define /lines '())
(define /links '())
(define /list '())
(define /ll '())
(define /local '())
(define /locals '())
(define /loop '())
(define /loop_check '())
(define /loops '())
(define /lvalues '())
(define /m '())
(define /m_one '())
(define /macro_decls '())
(define /main '())
(define /main_list '())
(define /make_n '())
(define /make_name '())
(define /match '())
(define /matches '())
(define /max '())
(define /min '())
(define /min_/B '())
(define /min_/P '())
(define /min_/Q '())
(define /min_dist '())
(define /min_n '())
(define /min_name '())
(define /min_size '())
(define /mins '())
(define /move '())
(define /n '())
(define /n1 '())
(define /n2 '())
(define /n3 '())
(define /name '())
(define /name2flag '())
(define /names '())
(define /need_flag '())
(define /needed '())
(define /new '())
(define /new/I '())
(define /new/L '())
(define /new/X '())
(define /new1 '())
(define /new2 '())
(define /new_/R '())
(define /new_actions '())
(define /new_assigns '())
(define /new_defns '())
(define /new_intersect '())
(define /new_n '())
(define /new_name '())
(define /new_pars '())
(define /new_path '())
(define /new_prec '())
(define /new_sub_/A/S '())
(define /new_tvs '())
(define /new_union '())
(define /new_vals '())
(define /new_vars '())
(define /newcomp '())
(define /newcond '())
(define /newl '())
(define /newsub '())
(define /newtests '())
(define /newvars '())
(define /next '())
(define /next_level '())
(define /node '())
(define /nodes '())
(define /nos '())
(define /not_/B '())
(define /not_comp '())
(define /notstacks '())
(define /notused '())
(define /nstack '())
(define /num '())
(define /numb_types '())
(define /nums '())
(define /o_where '())
(define /occ '())
(define /occs '())
(define /offset '())
(define /ok '())
(define /old '())
(define /old/L '())
(define /old_assign '())
(define /old_name '())
(define /one_line '())
(define /only '())
(define /op '())
(define /op1 '())
(define /op2 '())
(define /op_1 '())
(define /open '())
(define /open/L '())
(define /orig '())
(define /orig/L '())
(define /orig_/V/L '())
(define /orig_cc_values '())
(define /orig_posn '())
(define /orig_program '())
(define /orig_tests '())
(define /orig_val '())
(define /orig_var '())
(define /os_name '())
(define /other '())
(define /outer '())
(define /overwrite '())
(define /p '())
(define /p1 '())
(define /p11 '())
(define /p2 '())
(define /p22 '())
(define /p3 '())
(define /pack '())
(define /pair '())
(define /pairs '())
(define /par '())
(define /parent '())
(define /pars '())
(define /part '())
(define /pat '())
(define /pats '())
(define /pattern_type '())
(define /phi '())
(define /pivot '())
(define /pointers '())
(define /pop '())
(define /pop_regs '())
(define /pops '())
(define /port '())
(define /pos '())
(define /posn '())
(define /posn_n '())
(define /posns '())
(define /prec '())
(define /pred '())
(define /prefix '())
(define /proc '())
(define /proc_done '())
(define /procs '())
(define /push '())
(define /push_regs '())
(define /q '())
(define /quote '())
(define /r '())
(define /r1_name '())
(define /rbody '())
(define /re_sort '())
(define /recurse '())
(define /redef '())
(define /redundant '())
(define /ref '())
(define /reg '())
(define /reg_/D/S/E/C/Ts '())
(define /reg_init_count '())
(define /reg_inits '())
(define /reg_stack '())
(define /reg_var '())
(define /registers '())
(define /regs '())
(define /rel '())
(define /rel_posn '())
(define /rels '())
(define /rename '())
(define /rename_exp '())
(define /rename_lvalue '())
(define /renames '())
(define /replace '())
(define /req_tv '())
(define /res '())
(define /rest '())
(define /restored '())
(define /restores '())
(define /result '())
(define /result_vars '())
(define /return '())
(define /return_elts '())
(define /rhs '())
(define /root '())
(define /row_no '())
(define /rr '())
(define /runs '())
(define /s1 '())
(define /s_prefix_ops '())
(define /same '())
(define /save '())
(define /save_comps '())
(define /saved '())
(define /saved/L2 '())
(define /saves '())
(define /seen '())
(define /seen_code '())
(define /set '())
(define /sixth '())
(define /size '())
(define /size_1 '())
(define /size_2 '())
(define /size_3 '())
(define /sizeof '())
(define /sizes '())
(define /skip_st '())
(define /skipped_vars '())
(define /skips '())
(define /source '())
(define /span '())
(define /spec '())
(define /speculative_unroll '())
(define /split '())
(define /src '())
(define /ssa_file '())
(define /stack '())
(define /stack_val '())
(define /stacks '())
(define /start '())
(define /stat '())
(define /stats '())
(define /step '())
(define /steps '())
(define /str '())
(define /string_append '())
(define /strings '())
(define /sub '())
(define /sub2_indent '())
(define /sub3_indent '())
(define /sub_/A/S '())
(define /sub_indent '())
(define /succ '())
(define /succs '())
(define /summ '())
(define /swap '())
(define /sysmacs '())
(define /t '())
(define /tab '())
(define /tab1 '())
(define /tab2 '())
(define /tail '())
(define /take_out '())
(define /taken '())
(define /target '())
(define /targets '())
(define /temp '())
(define /test '())
(define /tested '())
(define /tests '())
(define /then '())
(define /thick '())
(define /this_level '())
(define /title '())
(define /tmp '())
(define /tmp_e '())
(define /tmp_result '())
(define /tmp_v '())
(define /tmp_var '())
(define /tmpl '())
(define /todo '())
(define /token1 '())
(define /token2 '())
(define /top '())
(define /topsort '())
(define /total '())
(define /tr_new '())
(define /trans '())
(define /true '())
(define /tv '())
(define /tvs '())
(define /type '())
(define /types '())
(define /unfold '())
(define /union1 '())
(define /union2 '())
(define /unroll '())
(define /up '())
(define /updates '())
(define /used '())
(define /v '())
(define /v1 '())
(define /v2 '())
(define /v_save '())
(define /v_to_e '())
(define /v_to_e_l '())
(define /val '())
(define /val_keep '())
(define /vals '())
(define /value '())
(define /values '())
(define /var '())
(define /var_keep '())
(define /var_val '())
(define /var_value '())
(define /vars '())
(define /vcons '())
(define /vv '())
(define /w '())
(define /w_store '())
(define /wanted '())
(define /where '())
(define /where_posn '())
(define /word '())
(define /ws_macro_pars '())
(define /x '())
(define /x1 '())
(define /x86_regs '())
(define /y '())
(define /y1 '())
(define /y2 '())
(define /yy '())
(define /yy_ch '())
(define /yy_line '())
(define /yy_lineno '())
(define /yy_print '())
(define /yy_sym '())
(define /yy_value '())
(define /z '())
(define /z1 '())
(define /z_name '())
(define /zf_name '())
(define alist '())
(define funct-result '())
(define i '())
(define k '())
(define key-val-pair '())
(define l '())
(define map-result '())
(define maphash-index '())
(define r '())
(define random-state-global '())
(define rbs '())
(define reduce-result '())
(define res '())
(define seq '())
(define this '())
(define val2 '())
(define var '())
(define x '())

