C:"
==========================================================================
FermaT Transformation System
Copyright (C) 2001 Software Migrations Limited.
Email: martin@gkc.org.uk

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
==========================================================================";
 


MW_PROC @Force_Double_To_Single_Loop_Test()==
  IF @ST(@I) <> T_Floop
    THEN @Fail("Not a do-loop")
  ELSIF @Trans?(TR_Double_To_Single_Loop)
    THEN @Fail("Can be done more simply")
    ELSE @Down; @Down;
	 IF @ST(@I) = T_Floop AND NOT(@Right?)
	   THEN @Pass           
	   ELSE @Fail("Not a double loop") FI FI.;


MW_PROC @Force_Double_To_Single_Loop_Code(Data)==
  C:"Down to inner loop";
  @Down;
  @Down;
  IF @Trans?(TR_Delete_Unreachable_Code)
    THEN @Trans(TR_Delete_Unreachable_Code,"") FI;
  C:"Down to loop body (Statement_s)";
  @Down;
  WHILE NOT @Is_Reducible? DO
    C: "Up to inner loop";
    @Up;
    VAR < ASType := @AS_Type >:
      FOREACH Statements DO
        @Down;
        DO IF 1 IN @TVs AND @Trans?(TR_Fully_Absorb_Right)
             THEN @Trans(TR_Fully_Absorb_Right,"") FI;
           IF @Right? THEN @Right ELSE EXIT(1) FI OD OD ENDVAR;
    C: "Back down to statement_s";
    @Down OD; 
  @Up;              
  @Splice_Over(@Cs(@Increment(@I^1, @AS_Type, -1, 1)));
  @Up; @Up.
 

