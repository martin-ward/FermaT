VAR < cc := 0, len_1 := 0, len_2 := 0, destination := 0 >:
BEGIN
  ACTIONS _enter_:
    _start_ == CALL Z END
    FMT001A7 == CALL A_000000 END
    A_000000 ==
      C:"*   SAMPLE PROGRAM WITH MULTIPLE ENTRY POINTS";
      CALL FMT501 END
    FMT501 ==
      C:"* SAMPLE FUNCTION 1";
      C:"<FermaT> 00000022 r0 r3";
      destination := r0;
      r3 := 2;
      CALL A_000002 END
    A_000002 ==
      C:"<FermaT> 00000024 r4 r1";
      r4 := a[dib(0, r1, 0), 4];
      CALL A_000006 END
    A_000006 ==
      C:"<FermaT> 00000025 r4";
      !P mvc(!XF c_lit(1, 4, "AAAA") VAR a[db(0, r4), 4]);
      CALL A_00000C END
    A_00000C ==
      C:"<FermaT> 00000026 r15";
      result_code := NOT_USED;
      !P FMT601( VAR call_macro, result_code, os);
      !P dummy( VAR regs, os);
      r15 := result_code;
      CALL A_00001A END
    A_00001A ==
      C:"<FermaT> 00000033 r14";
      destination := r14;
      CALL dispatch END
    FMT502 == C:"* SAMPLE FUNCTION 2"; CALL A_00001C END
    A_00001C ==
      C:"<FermaT> 00000036 r0 r3";
      destination := r0;
      r3 := 30;
      CALL A_00001E END
    A_00001E ==
      C:"<FermaT> 00000038 r4 r1";
      r4 := a[dib(0, r1, 0), 4];
      CALL A_000022 END
    A_000022 ==
      C:"<FermaT> 00000039 r4";
      !P mvc(!XF c_lit(1, 4, "BBBB") VAR a[db(0, r4), 4]);
      CALL A_000028 END
    A_000028 ==
      C:"<FermaT> 00000040 r15";
      result_code := NOT_USED;
      !P FMT602( VAR call_macro, result_code, os);
      !P dummy( VAR regs, os);
      r15 := result_code;
      CALL A_000036 END
    A_000036 ==
      C:"<FermaT> 00000047 r14";
      destination := r14;
      CALL dispatch END
    _enter_ ==
      D_IF entry_point = "FMT001A7"
               -> C:" <ENTRY POINT> ";
             C:" <NAME=FMT001A7> ";
             r1 := __r1_init__;
             r2 := __r2_init__;
             r3 := __r3_init__;
             r4 := __r4_init__;
             r5 := __r5_init__;
             r6 := __r6_init__;
             r7 := __r7_init__;
             r8 := __r8_init__;
             r9 := __r9_init__;
             r10 := __r10_init__;
             r11 := __r11_init__;
             r12 := __r12_init__;
             r13 := __r13_init__;
             r14 := __r14_init__;
             CALL FMT001A7
        [] entry_point = "FMT501"
               -> C:" <ENTRY POINT> ";
             r1 := __r1_init__;
             r2 := __r2_init__;
             r3 := __r3_init__;
             r4 := __r4_init__;
             r5 := __r5_init__;
             r6 := __r6_init__;
             r7 := __r7_init__;
             r8 := __r8_init__;
             r9 := __r9_init__;
             r10 := __r10_init__;
             r11 := __r11_init__;
             r12 := __r12_init__;
             r13 := __r13_init__;
             r14 := __r14_init__;
             CALL FMT501
        [] entry_point = "FMT502"
               -> C:" <ENTRY POINT> ";
             r1 := __r1_init__;
             r2 := __r2_init__;
             r3 := __r3_init__;
             r4 := __r4_init__;
             r5 := __r5_init__;
             r6 := __r6_init__;
             r7 := __r7_init__;
             r8 := __r8_init__;
             r9 := __r9_init__;
             r10 := __r10_init__;
             r11 := __r11_init__;
             r12 := __r12_init__;
             r13 := __r13_init__;
             r14 := __r14_init__;
             CALL FMT502 FI END
    dispatch ==
      IF destination = 0
        THEN CALL Z
        ELSE C:"FIXME: Unknown destination "; CALL Z FI
    END ENDACTIONS
WHERE
  FUNCT dib(d, i, b) == VAR <  >: (d + i + b) END
  FUNCT db(d, b) == VAR <  >: (d + b) END
END ENDVAR
