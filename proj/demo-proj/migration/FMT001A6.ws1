VAR < cc := 0, len_1 := 0, len_2 := 0,
      destination := 0 >:
BEGIN
  ACTIONS _enter_:
  _start_ == CALL Z;
CALL FMT001A6 END
FMT001A6 ==
	 
	CALL FMTAAA1 END
FMTAAA1 ==
	C:"*   SAMPLE PROGRAM WITH MULTIPLE ENTRY POINTS DEFINED BY A USER MACRO";
	 
	CALL A_000000 END
A_000000 ==
	C:"<FermaT> 00000021 r0 r3";
	IF 3 = 0 AND 0 <> 0
          THEN result_code := NOT_USED;
               !P call_via_ptr(r0 VAR regs, result_code, os);
               destination := 0 + 2;
               CALL dispatch
          ELSE destination := r0;
               r3 := 0 + 2;
               IF 0 <> 0 THEN CALL dispatch FI FI;
	CALL A_000002 END
A_000002 ==
	C:"* SET CALLING PARAMETER";
	C:"* CALL MODULE";
	C:"<FermaT> 00000025 r4 r1";
	r4 := a[dib(0, r1, 0), 4];
	CALL A_000006 END
A_000006 ==
	C:"<FermaT> 00000026 TEST1A r3 r4";
	!P mvc(a[db(TEST1A, r3), 3 + 1] VAR a[db(0, r4), 3 + 1]);
	CALL A_00000C END
A_00000C ==
	C:"<FermaT> 00000027 TEST1B r3 r4";
	!P mvc(a[db(TEST1B, r3), 3 + 1] VAR a[db(4, r4), 3 + 1]);
	CALL A_000012 END
A_000012 ==
	C:"<FermaT> 00000028 r15";
	result_code := NOT_USED;
        !P FMT401( VAR call_macro, result_code, os);
        !P dummy(VAR  regs, os);
        r15 := result_code;
	CALL A_000022 END
A_000022 ==
	C:"<FermaT> 00000035 r14";
	IF TRUE
          THEN IF 14 <> 0 THEN destination := r14; CALL dispatch FI FI;
	CALL FMTBBB2 END
FMTBBB2 ==
	C:"*        <FERMAT><SB><9><============================================>";
	 
	CALL A_00002C END
A_00002C ==
	C:"<FermaT> 00000040 r0 r3";
	IF 3 = 0 AND 0 <> 0
          THEN result_code := NOT_USED;
               !P call_via_ptr(r0 VAR regs, result_code, os);
               destination := 44 + 2;
               CALL dispatch
          ELSE destination := r0;
               r3 := 44 + 2;
               IF 0 <> 0 THEN CALL dispatch FI FI;
	CALL A_00002E END
A_00002E ==
	C:"* SET CALLING PARAMETER";
	C:"<FermaT> 00000043 r4 r1";
	r4 := a[dib(0, r1, 0), 4];
	CALL A_000032 END
A_000032 ==
	C:"<FermaT> 00000044 TEST2 r3 r4";
	!P mvc(a[db(TEST2, r3), 3 + 1] VAR a[db(0, r4), 3 + 1]);
	CALL A_000038 END
A_000038 ==
	C:"<FermaT> 00000045 WTAB1 r5 r3";
	r5 := dib(WTAB1, 0, r3);
	CALL A_00003C END
A_00003C ==
	C:"<FermaT> 00000047 WREC2 r6 r3";
	r6 := dib(WREC2, 0, r3);
	CALL LABA END
LABA ==
	WDS1 := r5;
C:"<FermaT> 00000049 WDS1F1 WDS1F1[1] LABA";
		IF a[db(WDS1F1, WDS1), 1] = !XF x_lit(1, 1, "FF") THEN cc := 0
        ELSIF a[db(WDS1F1, WDS1), 1] < !XF x_lit(1, 1, "FF") THEN cc := 1
                                    ELSE cc := 2 FI;
	CALL A_000044 END
A_000044 ==
	C:"<FermaT> 00000050 LABZ";
	IF cc = 0 THEN CALL LABZ FI;
	CALL A_000048 END
A_000048 ==
	WDS1 := r5;
	WDS2 := r6;
C:"<FermaT> 00000051 WDS2F1 WDS1F1";
		!P mvc(a[db(WDS1F1, WDS1), 3 + 1] VAR a[db(WDS2F1, WDS2), 3 + 1]);
	CALL A_00004E END
A_00004E ==
	WDS1 := r5;
	WDS2 := r6;
C:"<FermaT> 00000052 WDS2F2 WDS1F2";
		!P mvc(a[db(WDS1F2, WDS1), 5 + 1] VAR a[db(WDS2F2, WDS2), 5 + 1]);
	CALL A_000054 END
A_000054 ==
	WDS1 := r5;
	WDS2 := r6;
C:"<FermaT> 00000053 WDS2F3 WDS1F3";
		!P mvc(a[db(WDS1F3, WDS1), 2 + 1] VAR a[db(WDS2F3, WDS2), 2 + 1]);
	CALL A_00005A END
A_00005A ==
	WDS1 := r5;
	WDS2 := r6;
C:"<FermaT> 00000054 WDS2F4 WDS1F4";
		!P mvc(a[db(WDS1F4, WDS1), 2 + 1] VAR a[db(WDS2F4, WDS2), 2 + 1]);
	CALL A_000060 END
A_000060 ==
	C:"<FermaT> 00000055 WREC2 r15";
	result_code := NOT_USED;
        !P FMT402(!XF address_of(WREC2) VAR call_macro, result_code, os);
        !P dummy(VAR WREC2, regs, os);
        r15 := result_code;
	CALL A_00007E END
A_00007E ==
	C:"<FermaT> 00000071 LABA";
	IF TRUE THEN CALL LABA FI;
	CALL LABZ END
LABZ ==
	C:"<FermaT> 00000072 LABZ r14";
	IF TRUE
          THEN IF 14 <> 0 THEN destination := r14; CALL dispatch FI FI;
	CALL Z END
  _enter_ == C:" <ENTRY POINT> ";
             C:" <NAME=FMT001A6> ";
                r1  := __r1_init__;
		   r2  := __r2_init__;
		   r3  := __r3_init__;
		   r4  := __r4_init__;
		   r5  := __r5_init__;
		   r6  := __r6_init__;
		   r7  := __r7_init__;
		   r8  := __r8_init__;
		   r9  := __r9_init__;
		   r10 := __r10_init__;
		   r11 := __r11_init__;
		   r12 := __r12_init__;
		   r13 := __r13_init__;
		   r14 := __r14_init__;   CALL FMT001A6 END
dispatch ==
	IF destination = 0 THEN CALL Z
		ELSE C:"FIXME: Unknown destination "; CALL Z FI END
ENDACTIONS
WHERE
  FUNCT dib (d, i, b) ==: (d+i+b).,
  FUNCT db (d, b) ==: (d+b).
END ENDVAR
