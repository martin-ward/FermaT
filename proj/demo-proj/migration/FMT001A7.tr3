Fix Assembler, Max_Passes = 35 call_budget = 4000
Trial = 1
Initial simplification
Testing transformation: Simplify
Applying transformation: Simplify
FA_nn = 101 posn = ()
Preserving actions: (dispatch)
Testing transformation: Find Dead Code
Applying transformation: Find Dead Code
FA_nn = 102 posn = (1)
Action system type is Reg
Simplifying...
Deleting unreachable code: 
16 actions
Calculating Succs and Preds... Done.
Looking for unreachable actions...

All actions are reachable from the starting action.
Rebuilding the action system.
There are 16 actions in the main system.
Testing transformation: Simplify Action System
Applying transformation: Simplify Action System
FA_nn = 103 posn = (1)
16 actions, type = Reg
Deleting unreachable code: 
Action system type is Reg
Leave_Alone_Names = dispatch
16 actions
Simplifying conditional statements: 
Calculating Succs and Preds... Done.
Eliminating actions which are only called once: ............
Finding elementary actions
Removing elementary actions: _start_=17 

Action system type is Reg
3 actions

Simplifying action bodies: .
Eliminating actions which are only called once: 
Rebuilding the action system.
There are 3 actions in the main system.
Syntax is OK.

REITERATING...
Action system type is Reg
Leave_Alone_Names = dispatch
3 actions
Simplifying conditional statements: 
Calculating Succs and Preds... Done.
Eliminating actions which are only called once: 
Finding elementary actions
Removing elementary actions: 

Action system type is Reg
3 actions

Simplifying action bodies: .
Eliminating actions which are only called once: 
Rebuilding the action system.
There are 3 actions in the main system.
Syntax is OK.
Done
Testing transformation: Fix Decimal
Applying transformation: Fix Decimal
FA_nn = 104 posn = (1)
Reading options file: /fermat2/config/options
Testing transformation: Remove All Redundant Vars
Applying transformation: Remove All Redundant Vars
FA_nn = 105 posn = ()
Top_Level_Remove: (len_2 len_1 cc)
Constant_Propagation effort = 0 budget = 200
Migration = 1
Call Budget = 200
No constant DSECTs found
3 actions
Calculating Succs and Preds... Done.
.R
Unfolding a dispatch: destination = __r14_init__
 posn=(1 3 2 31)
..

Re-Scanning Action System, scan: 2
.R
Unfolding a dispatch: destination = __r14_init__
 posn=(1 3 2 31)
..
Rebuilding the action system.
There are 3 actions in the main system.
 
Simplifying the result

PASS 1

Testing transformation: Find Dead Code
Applying transformation: Find Dead Code
FA_nn = 106 posn = ()
Action system type is Reg
Simplifying...
Deleting unreachable code: 
3 actions
Calculating Succs and Preds... Done.
Looking for unreachable actions...

All actions are reachable from the starting action.
Rebuilding the action system.
There are 3 actions in the main system.
Finding actions which only call Z...
 
Testing transformation: Unfold Dynamic Calls
Testing transformation: Fix Dispatch
Applying transformation: Fix Dispatch
FA_nn = 107 posn = (1 2 1)
Fix_Dispatch effort = 0 budget = 4000
3 actions
Calculating Succs and Preds... Done.
Looking for entry actions...

Checking which entry actions are simple procedures...
Rebuilding the action system.
There are 3 actions in the main system.
Syntax is OK
Testing transformation: Delete_Savearea
Applying transformation: Delete_Savearea
FA_nn = 108 posn = ()
Testing transformation: Replace Accs With Value
Applying transformation: Replace Accs With Value
FA_nn = 109 posn = ()
Reading options file: /fermat2/config/options
DSECTs = ()
..r...r. 
Testing transformation: Constant Propagation
Applying transformation: Constant Propagation
FA_nn = 110 posn = ()
Constant_Propagation effort = 0 budget = 4000
Migration = 1
Call Budget = 4000
No constant DSECTs found
3 actions
Calculating Succs and Preds... Done.
..R
Unfolding a dispatch: destination = __r14_init__
 posn=(16)


Re-Scanning Action System, scan: 2
..R
Unfolding a dispatch: destination = __r14_init__
 posn=(16)

Rebuilding the action system.
There are 3 actions in the main system.
 
Simplifying the result
Testing transformation: Delete_Savearea
Applying transformation: Delete_Savearea
FA_nn = 111 posn = ()
Testing transformation: Replace Accs With Value
Applying transformation: Replace Accs With Value
FA_nn = 112 posn = ()
Reading options file: /fermat2/config/options
DSECTs = ()
..r...r. 
Testing transformation: Constant Propagation
Applying transformation: Constant Propagation
FA_nn = 113 posn = ()
Constant_Propagation effort = 0 budget = 4000
Migration = 1
Call Budget = 4000
No constant DSECTs found
3 actions
Calculating Succs and Preds... Done.
..

Re-Scanning Action System, scan: 2
..
Rebuilding the action system.
There are 3 actions in the main system.
 
Simplifying the result
Testing transformation: Merge Calls
Applying transformation: Merge Calls
FA_nn = 114 posn = (1 2 1)
Using Expansion to reduce calls... 
Deleting unreachable code... 
Taking out calls... Entry actions (not taken out) = ()

Testing transformation: Find Dead Code
Applying transformation: Find Dead Code
FA_nn = 115 posn = (1 2 1)
Action system type is Reg
Simplifying...
Deleting unreachable code: 
3 actions
Calculating Succs and Preds... Done.
Looking for unreachable actions...
(dispatch) 
All actions are reachable from the starting action.
Rebuilding the action system.
There are 2 actions in the main system.
Testing transformation: Simplify Action System
Applying transformation: Simplify Action System
FA_nn = 116 posn = (1 2 1)
2 actions, type = Reg
Deleting unreachable code: 
Action system type is Reg
Leave_Alone_Names = dispatch
2 actions
Simplifying conditional statements: 
Calculating Succs and Preds... Done.
Eliminating actions which are only called once: 
Finding elementary actions
Removing elementary actions: 

Action system type is Reg
2 actions

Simplifying action bodies: .
Eliminating actions which are only called once: 
Rebuilding the action system.
There are 2 actions in the main system.
Syntax is OK.
Done
Removing Action System: _enter_
Testing transformation: Simplify Item
Testing transformation: Replace Accs With Value
Applying transformation: Replace Accs With Value
FA_nn = 117 posn = ()
Reading options file: /fermat2/config/options
DSECTs = ()
..r...r. 
Testing transformation: Remove All Redundant Vars
Applying transformation: Remove All Redundant Vars
FA_nn = 118 posn = ()
Redundant variables are: (destination)
Testing transformation: Delete All Redundant
Applying transformation: Delete All Redundant
FA_nn = 119 posn = ()
............XX.............XX.............XX..................
Testing transformation: Abort_Processing
Testing transformation: Push Pop
Aligning nested IF statements 
Joining cases in IF statements 
Testing transformation: Merge Calls
Applying transformation: Merge Calls
FA_nn = 120 posn = (1)
Using Expansion to reduce calls... 
Deleting unreachable code... 
Taking out calls... Entry actions (not taken out) = ()

Testing transformation: Find Dead Code
Applying transformation: Find Dead Code
FA_nn = 121 posn = (1)
Action system type is Reg
Simplifying...
Deleting unreachable code: 
2 actions
Calculating Succs and Preds... Done.
Looking for unreachable actions...

All actions are reachable from the starting action.
Rebuilding the action system.
There are 2 actions in the main system.
Testing transformation: Simplify Action System
Applying transformation: Simplify Action System
FA_nn = 122 posn = (1)
2 actions, type = Reg
Deleting unreachable code: 
Action system type is Reg
Leave_Alone_Names = dispatch
2 actions
Simplifying conditional statements: 
Calculating Succs and Preds... Done.
Eliminating actions which are only called once: 
Finding elementary actions
Removing elementary actions: 

Action system type is Reg
2 actions

Simplifying action bodies: .
Eliminating actions which are only called once: 
Rebuilding the action system.
There are 2 actions in the main system.
Syntax is OK.
Done
Removing/Reducing superfluous loops

Finding actions which only call Z...
Creating procedure `FMT501', size = 13, tv = 0
  position = (1 2 1 2 1)
Searching for other copies of body:  
 
Testing transformation: Unfold Dynamic Calls
Looking for action systems in proc bodies...
Finding actions which only call Z...
 
Testing transformation: Unfold Dynamic Calls


Testing transformation: Unfold Proc Calls

Testing transformation: Simplify
Applying transformation: Simplify
FA_nn = 123 posn = ()

PASS 2

Testing transformation: Find Dead Code
 
Testing transformation: Unfold Dynamic Calls
Testing transformation: Constant Propagation
Applying transformation: Constant Propagation
FA_nn = 124 posn = ()
Constant_Propagation effort = 0 budget = 4000
Migration = 1
Call Budget = 4000
No constant DSECTs found
Summarising proc definitions... Done.
p

 
Simplifying the result
Testing transformation: Delete_Savearea
Applying transformation: Delete_Savearea
FA_nn = 125 posn = ()
Testing transformation: Replace Accs With Value
Applying transformation: Replace Accs With Value
FA_nn = 126 posn = ()
Reading options file: /fermat2/config/options
DSECTs = ()
.r.r 
Testing transformation: Constant Propagation
Applying transformation: Constant Propagation
FA_nn = 127 posn = ()
Constant_Propagation effort = 0 budget = 4000
Migration = 1
Call Budget = 4000
No constant DSECTs found
Summarising proc definitions... Done.
p

 
Simplifying the result
Testing transformation: Remove All Redundant Vars
Applying transformation: Remove All Redundant Vars
FA_nn = 128 posn = ()
Testing transformation: Delete All Redundant
Applying transformation: Delete All Redundant
FA_nn = 129 posn = ()
......................................................
Testing transformation: Abort_Processing
Testing transformation: Push Pop
Aligning nested IF statements 
Joining cases in IF statements 
Removing/Reducing superfluous loops

 
Testing transformation: Unfold Dynamic Calls
Testing transformation: Constant Propagation
Applying transformation: Constant Propagation
FA_nn = 130 posn = ()
Constant_Propagation effort = 0 budget = 4000
Migration = 1
Call Budget = 4000
No constant DSECTs found
Summarising proc definitions... Done.
p

 
Simplifying the result


Testing transformation: Unfold Proc Calls

Testing transformation: Simplify
Applying transformation: Simplify
FA_nn = 131 posn = ()
--- current equals old ---
Trial = 6
Initial simplification
Testing transformation: Simplify
Applying transformation: Simplify
FA_nn = 132 posn = ()
Preserving actions: (dispatch)
Testing transformation: Remove All Redundant Vars
Applying transformation: Remove All Redundant Vars
FA_nn = 133 posn = ()

PASS 3

Testing transformation: Find Dead Code
 
Testing transformation: Unfold Dynamic Calls
Testing transformation: Constant Propagation
Applying transformation: Constant Propagation
FA_nn = 134 posn = ()
Constant_Propagation effort = 2 budget = 4000
Migration = 1
Call Budget = 4000
No constant DSECTs found
Summarising proc definitions... Done.
p

 
Simplifying the result
Testing transformation: Delete_Savearea
Applying transformation: Delete_Savearea
FA_nn = 135 posn = ()
Testing transformation: Replace Accs With Value
Applying transformation: Replace Accs With Value
FA_nn = 136 posn = ()
Reading options file: /fermat2/config/options
DSECTs = ()
.r.r 
Testing transformation: Constant Propagation
Applying transformation: Constant Propagation
FA_nn = 137 posn = ()
Constant_Propagation effort = 2 budget = 4000
Migration = 1
Call Budget = 4000
No constant DSECTs found
Summarising proc definitions... Done.
p

 
Simplifying the result
Testing transformation: Replace Accs With Value
Applying transformation: Replace Accs With Value
FA_nn = 138 posn = ()
Reading options file: /fermat2/config/options
DSECTs = ()
.r.r 
Testing transformation: Remove All Redundant Vars
Applying transformation: Remove All Redundant Vars
FA_nn = 139 posn = ()
Testing transformation: Delete All Redundant
Applying transformation: Delete All Redundant
FA_nn = 140 posn = ()
......................................................
Testing transformation: Abort_Processing
Testing transformation: Push Pop
Aligning nested IF statements 
Joining cases in IF statements 
Removing/Reducing superfluous loops

 
 
Testing transformation: Unfold Dynamic Calls
Testing transformation: Constant Propagation
Applying transformation: Constant Propagation
FA_nn = 141 posn = ()
Constant_Propagation effort = 2 budget = 4000
Migration = 1
Call Budget = 4000
No constant DSECTs found
Summarising proc definitions... Done.
p

 
Simplifying the result


Testing transformation: Unfold Proc Calls

Testing transformation: Simplify
Applying transformation: Simplify
FA_nn = 142 posn = ()
Actions to Procs...

Testing transformation: Unfold Proc Calls
Testing transformation: Constant Propagation
Applying transformation: Constant Propagation
FA_nn = 143 posn = (1)
Constant_Propagation effort = 2 budget = 4000
Migration = 1
Call Budget = 4000
Summarising proc definitions... Done.
p

 
Simplifying the result
--- current equals old ---

Final simplification...
Aligning nested IF statements 
Joining cases in IF statements 
Testing transformation: Unfold Proc Calls
Testing transformation: Constant Propagation
Applying transformation: Constant Propagation
FA_nn = 144 posn = (1)
Constant_Propagation effort = 2 budget = 4000
Migration = 1
Call Budget = 4000
Summarising proc definitions... Done.
p

 
Simplifying the result

Testing transformation: Replace Accs With Value
Applying transformation: Replace Accs With Value
FA_nn = 145 posn = ()
Reading options file: /fermat2/config/options
DSECTs = ()
.r.r 
Removing/Reducing superfluous loops

Testing transformation: Unfold Proc Calls
Testing transformation: Remove All Redundant Vars
Applying transformation: Remove All Redundant Vars
FA_nn = 146 posn = ()
Testing transformation: Delete All Redundant
Applying transformation: Delete All Redundant
FA_nn = 147 posn = ()
......................................................
Testing transformation: Simplify
Applying transformation: Simplify
FA_nn = 148 posn = ()

Transformation time: 11
Transformation Count: 87
Result is in: FMT001A7.ws4
