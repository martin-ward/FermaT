VAR < cc := 0, len_1 := 0, len_2 := 0,
      destination := 0 >:
BEGIN
  ACTIONS _enter_:
  _start_ == CALL Z;
CALL FMT001A5 END
FMT001A5 ==
	 
	CALL A_000000 END
A_000000 ==
	C:"* SAMPLE PROGRAM TO LOAD A SERIES OF PROGRAMS";
	C:"* ADDRESSES STORED IN A REFERENCE TABLE";
	C:"<FermaT> 00000020 r0 r3";
	IF 3 = 0 AND 0 <> 0
          THEN result_code := NOT_USED;
               !P call_via_ptr(r0 VAR regs, result_code, os);
               destination := 0 + 2;
               CALL dispatch
          ELSE destination := r0;
               r3 := 0 + 2;
               IF 0 <> 0 THEN CALL dispatch FI FI;
	CALL A_000002 END
A_000002 ==
	C:"<FermaT> 00000022 r11 r1";
	r11 := a[dib(0, r1, 0), 4];
	CALL A_000006 END
A_000006 ==
	C:"<FermaT> 00000024 r0 r1 r15";
	r0 := NOT_USED; r1 := NOT_USED;
        result_code := NOT_USED;
        !P LOAD("FMT113 EP=FMT113" VAR r0, r1, result_code, os);
        r0 := v_fmt113;
        r15 := result_code;
	CALL A_000014 END
A_000014 ==
	MODSTORE := r11;
C:"<FermaT> 00000028 AMOD113 r0";
		a[dib(AMOD113, 0, MODSTORE), 4] := r0;
	CALL A_000018 END
A_000018 ==
	C:"<FermaT> 00000029 r0 r1 r15";
	r0 := NOT_USED; r1 := NOT_USED;
        result_code := NOT_USED;
        !P LOAD("FMT114 EP=FMT114" VAR r0, r1, result_code, os);
        r0 := v_fmt114;
        r15 := result_code;
	CALL A_000026 END
A_000026 ==
	MODSTORE := r11;
C:"<FermaT> 00000033 AMOD114 r0";
		a[dib(AMOD114, 0, MODSTORE), 4] := r0;
	CALL A_00002A END
A_00002A ==
	C:"<FermaT> 00000034 r0 r1 r15";
	r0 := NOT_USED; r1 := NOT_USED;
        result_code := NOT_USED;
        !P LOAD("FMT115 EP=FMT115" VAR r0, r1, result_code, os);
        r0 := v_fmt115;
        r15 := result_code;
	CALL A_000038 END
A_000038 ==
	MODSTORE := r11;
C:"<FermaT> 00000038 AMOD115 r0";
		a[dib(AMOD115, 0, MODSTORE), 4] := r0;
	CALL A_00003C END
A_00003C ==
	C:"*        USER CALL. DEPENDENCY SATISFIED BY FMT200P9 USING VERSION.TAB";
	C:"<FermaT> 00000040 WTAB1 r5 r3";
	r5 := dib(WTAB1, 0, r3);
	CALL A_000040 END
A_000040 ==
	C:"<FermaT> 00000042 WREC2 r6 r3";
	r6 := dib(WREC2, 0, r3);
	CALL LABA END
LABA ==
	WDS1 := r5;
C:"<FermaT> 00000044 WDS1F1 WDS1F1[1] LABA";
		IF a[db(WDS1F1, WDS1), 1] = !XF x_lit(1, 1, "FF") THEN cc := 0
        ELSIF a[db(WDS1F1, WDS1), 1] < !XF x_lit(1, 1, "FF") THEN cc := 1
                                    ELSE cc := 2 FI;
	CALL A_000048 END
A_000048 ==
	C:"<FermaT> 00000045 LABZ";
	IF cc = 0 THEN CALL LABZ FI;
	C:"* <FERMAT ANN><S><1>";
	C:"<FermaT> 00000045 r5 r6";
	!P mvc(a[db(0, r5), 3 + 1] VAR a[db(0, r6), 3 + 1]);
	CALL A_00004C END
A_00004C ==
	WDS1 := r5;
	WDS2 := r6;
C:"<FermaT> 00000046 WDS2F1 WDS1F1";
		!P mvc(a[db(WDS1F1, WDS1), 3 + 1] VAR a[db(WDS2F1, WDS2), 3 + 1]);
	CALL A_000052 END
A_000052 ==
	WDS1 := r5;
	WDS2 := r6;
C:"<FermaT> 00000047 WDS2F2 WDS1F2";
		!P mvc(a[db(WDS1F2, WDS1), 5 + 1] VAR a[db(WDS2F2, WDS2), 5 + 1]);
	CALL A_000058 END
A_000058 ==
	WDS1 := r5;
	WDS2 := r6;
C:"<FermaT> 00000048 WDS2F3 WDS1F3";
		!P mvc(a[db(WDS1F3, WDS1), 2 + 1] VAR a[db(WDS2F3, WDS2), 2 + 1]);
	CALL A_00005E END
A_00005E ==
	WDS1 := r5;
	WDS2 := r6;
C:"<FermaT> 00000049 WDS2F4 WDS1F4";
		!P mvc(a[db(WDS1F4, WDS1), 2 + 1] VAR a[db(WDS2F4, WDS2), 2 + 1]);
	CALL A_000064 END
A_000064 ==
	C:"* <FERMAT ANN><E><1>";
	C:"<FermaT> 00000051 WREC2 A0007";
	IF TRUE THEN CALL A0007 FI;
	CALL A0007 END
A0007 ==
	 
	CALL A_000070 END
A_000070 ==
	C:"<FermaT> 00000055 MFI0008 r1 r3";
	r1 := dib(MFI0008, 0, r3);
	CALL A_000074 END
A_000074 ==
	C:" DATA MACRO: CNOP 0,4 ";
	C:"<FermaT> 00000057 ";
	IF TRUE THEN CALL A_00007C FI;
	CALL A_00007C END
A_00007C ==
	C:"<FermaT> 00000060 r0";
	r0 := dib(1, 0, 0);
	CALL A_000080 END
A_000080 ==
	C:" DATA MACRO: CNOP 0,4 ";
	C:"<FermaT> 00000062 r15";
	r15 := 136; CALL A_000088;
	CALL A_000088 END
A_000088 ==
	C:"<FermaT> 00000067 r15";
	r15 := a[dib(0, r15, 0), 4];
	CALL A_00008C END
A_00008C ==
	C:"<FermaT> 00000068 r15 r14";
	IF 14 = 15 AND 15 <> 0
          THEN result_code := NOT_USED;
               !P call_via_ptr(r15 VAR regs, result_code, os);
               destination := 142;
               CALL dispatch
          ELSE destination := r15;
               r14 := 142;
               IF 15 <> 0 THEN CALL dispatch FI FI;
	CALL A_00008E END
A_00008E ==
	C:"<FermaT> 00000069 LABA";
	IF TRUE THEN CALL LABA FI;
	CALL LABZ END
LABZ ==
	C:"<FermaT> 00000070 LABZ r14";
	IF TRUE
          THEN IF 14 <> 0 THEN destination := r14; CALL dispatch FI FI;
	CALL Z END
  _enter_ == C:" <ENTRY POINT> ";
             C:" <NAME=FMT001A5> ";
                r1  := __r1_init__;
		   r2  := __r2_init__;
		   r3  := __r3_init__;
		   r4  := __r4_init__;
		   r5  := __r5_init__;
		   r6  := __r6_init__;
		   r7  := __r7_init__;
		   r8  := __r8_init__;
		   r9  := __r9_init__;
		   r10 := __r10_init__;
		   r11 := __r11_init__;
		   r12 := __r12_init__;
		   r13 := __r13_init__;
		   r14 := __r14_init__;   CALL FMT001A5 END
dispatch ==
	   IF destination = 0 THEN CALL Z
	ELSIF destination = 124 THEN CALL A_00007C
	ELSIF destination = 136 THEN CALL A_000088
	ELSIF destination = 142 THEN CALL A_00008E
	ELSIF destination = 146 THEN CALL LABZ
		ELSE C:"FIXME: Unknown destination "; CALL Z FI END
ENDACTIONS
WHERE
  FUNCT dib (d, i, b) ==: (d+i+b).,
  FUNCT db (d, b) ==: (d+b).
END ENDVAR
