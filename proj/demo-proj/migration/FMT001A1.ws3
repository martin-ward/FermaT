VAR < cc := 0,
      len_1 := 0,
      len_2 := 0,
      destination := 0,
      EODAD_DDIN := 132,
      EODAD_UNKNOWN := 132 >:
ACTIONS _enter_1:
  _enter_1 ==
    D_IF entry_point = "_enter_"  ->  CALL _enter_
      [] entry_point = "WCLC1"  ->  CALL WCLC1 FI END
  _start_ == CALL Z END
  FMT001A1 ==
    C:"*********************************************************************";
    CALL A_000000 END
  A_000000 ==
    C:"<FermaT> 00000123 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14";
    !P push_regs(r0,
                  r1,
                  r2,
                  r3,
                  r4,
                  r5,
                  r6,
                  r7,
                  r8,
                  r9,
                  r10,
                  r11,
                  r12,
                  r13,
                  r14
      VAR reg_stack);
    !P chain_reg( VAR r13, os);
    CALL A_000004 END
  A_000004 ==
    C:"<FermaT> 00000124 r3 r15";
    r3 := r15;
    CALL A_000006 END
  A_000006 ==
    C:"*        <FERMAT><ML><0><>";
    C:"<FermaT> 00000126 WSAVE WSAVE[5] WSAVE[6] WSAVE[7] WSAVE[8] r3 r13";
    WSAVE[5..8] := r13;
    CALL A_00000A END
  A_00000A ==
    C:"*        <FERMAT><ML><0><>";
    C:"<FermaT> 00000127 WSAVE r14 r3";
    r14 := !XF address_of(WSAVE);
    CALL A_00000E END
  A_00000E ==
    C:"<FermaT> 00000128 r13 r14";
    a[r13 + 8, 4] := r14;
    CALL A_000012 END
  A_000012 ==
    C:"*        <FERMAT><ML><0><>";
    C:"<FermaT> 00000129 WSAVE r13 r3";
    r13 := !XF address_of(WSAVE);
    CALL A_000016 END
  A_000016 ==
    C:"*";
    C:"<FermaT> 00000131 DDIN r15";
    result_code := NOT_USED;
    !P OPEN(DDIN, "INPUT" VAR result_code, os);
    r15 := result_code;
    CALL A_000022 END
  A_000022 ==
    C:"<FermaT> 00000137 RDSOUT r15";
    result_code := NOT_USED;
    !P OPEN(RDSOUT, "OUTPUT" VAR result_code, os);
    r15 := result_code;
    CALL A_00002E END
  A_00002E ==
    C:"READ FIRST RECORD";
    C:"<FermaT> 00000143 GETREC r10";
    r10 := 50;
    CALL GETREC END
  A_000032 ==
    C:"<FermaT> 00000144 LAB110"; CALL LAB110 END
  LAB100 ==
    C:"READ NEXT RECORD";
    C:"<FermaT> 00000145 GETREC LAB100 r10";
    r10 := 58;
    CALL GETREC END
  A_00003A ==
    C:"INDEX WORD CHANGED ?";
    C:"Execute instruction successfully processed:";
    C:" <EXEC TARGET 151: 229 229> ";
    C:"<FermaT> 00000151 WLAST r3 r5 r4";
    IF WLAST[1..r5 + 1] = a[r4, r5 + 1]
      THEN cc := 0
    ELSIF WLAST[1..r5 + 1] < a[r4, r5 + 1]
      THEN cc := 1
      ELSE cc := 2 FI;
    CALL A_00003E END
  A_00003E ==
    C:"*WCLC1   CLC   WLAST(1),0(R4)";
    C:"NO.";
    C:"<FermaT> 00000153 LAB120";
    IF cc = 0 THEN CALL LAB120 FI;
    CALL A_000042 END
  A_000042 ==
    C:"YES - WRITE PRINT LINE";
    C:"<FermaT> 00000154 RDSOUT WPRT r15";
    C:"FIXME: Unknown File max for RDSOUT ";
    C:"FIXME: Unknown File max for RDSOUT ";
    C:"FIXME: Unknown File min for RDSOUT ";
    C:"FIXME: Unknown File max for RDSOUT ";
    C:"FIXME: Unknown File max for RDSOUT ";
    C:"FIXME: Unknown File min for RDSOUT ";
    result_code := NOT_USED;
    !P PUT_FIXED(RDSOUT, WPRT[1] VAR result_code, os);
    r15 := RDSOUT_STATUS;
    CALL A_000052 END
  A_000052 ==
    C:"CLEAR PRINT LINE";
    C:"<FermaT> 00000160 WPRT WPRT[1] r3";
    WPRT[1] := !XF mvi(" ");
    CALL A_000056 END
  A_000056 ==
    C:"<FermaT> 00000161 WPRT WPRT[1] r3";
    !P fill(WPRT[1] VAR WPRT[2..80]);
    CALL LAB110 END
  LAB110 ==
    C:"STORE INDEX WORD IN PRINT LINE";
    C:"Execute instruction successfully processed:";
    C:" <EXEC TARGET 162: 230 230> ";
    C:"<FermaT> 00000162 WPRT LAB110 r4 r5 r3";
    WPRT[1..r5 + 1] := a[r4, r5 + 1];
    CALL A_000060 END
  A_000060 ==
    C:"*WMVC1   MVC   WPRT(1),0(R4)";
    C:"ADDRESS PRINT LINE";
    C:"<FermaT> 00000164 WPRT r8 r3";
    r8 := !XF address_of(WPRT);
    CALL A_000064 END
  A_000064 ==
    C:"SKIP OVER WORD";
    C:"<FermaT> 00000165 r8 r5";
    r8 := r5 + r8 + 2;
    CALL A_000068 END
  A_000068 ==
    C:"<FermaT> 00000166 LAB130"; CALL LAB130 END
  LAB120 ==
    C:"ADD SEPARATOR";
    C:"<FermaT> 00000167 LAB120 r8";
    a[r8] := !XF mvi(",");
    CALL A_000070 END
  A_000070 ==
    C:"INDEX OVER SEPARATOR";
    C:"<FermaT> 00000168 r8";
    r8 := r8 + 1;
    CALL LAB130 END
  LAB130 ==
    C:"STORE PAGE NUMBER";
    C:"Execute instruction successfully processed:";
    C:" <EXEC TARGET 169: 231 231> ";
    C:"<FermaT> 00000169 LAB130 r6 r7 r8";
    a[r8, r7 + 1] := a[r6, r7 + 1];
    CALL A_000078 END
  A_000078 ==
    C:"*WMVC2   MVC   0(1,R8),0(R6)";
    C:"INDEX OVER PAGE NUMBER";
    C:"<FermaT> 00000171 r8 r7";
    r8 := r7 + r8 + 1;
    CALL A_00007C END
  A_00007C ==
    C:"STORE LAST WORD";
    C:"Execute instruction successfully processed:";
    C:" <EXEC TARGET 172: 232 232> ";
    C:"<FermaT> 00000172 WLAST WREC r3 r5";
    WLAST[1..r5 + 1] := WREC[1..r5 + 1];
    CALL A_000080 END
  A_000080 ==
    C:"*WMVC3   MVC   WLAST(1),WREC";
    C:"<FermaT> 00000174 LAB100";
    CALL LAB100 END
  LAB140 ==
    C:"*";
    C:"<FermaT> 00000176 RDSOUT WPRT LAB140 r15";
    C:"FIXME: Unknown File max for RDSOUT ";
    C:"FIXME: Unknown File max for RDSOUT ";
    C:"FIXME: Unknown File min for RDSOUT ";
    C:"FIXME: Unknown File max for RDSOUT ";
    C:"FIXME: Unknown File max for RDSOUT ";
    C:"FIXME: Unknown File min for RDSOUT ";
    result_code := NOT_USED;
    !P PUT_FIXED(RDSOUT, WPRT[1] VAR result_code, os);
    r15 := RDSOUT_STATUS;
    CALL A_000094 END
  A_000094 ==
    C:"<FermaT> 00000182 DDIN r15";
    result_code := NOT_USED;
    !P CLOSE(DDIN VAR result_code, os);
    r15 := result_code;
    CALL A_00009E END
  A_00009E ==
    C:"<FermaT> 00000188 RDSOUT r15";
    result_code := NOT_USED;
    !P CLOSE(RDSOUT VAR result_code, os);
    r15 := result_code;
    CALL LAB999 END
  LAB999 ==
    C:"*";
    C:"*        <FERMAT><ML><0><>";
    C:"<FermaT> 00000195 WSAVE WSAVE[5] WSAVE[6] WSAVE[7] WSAVE[8] LAB999 r13 r3";
    r13 := WSAVE[5..8];
    CALL A_0000AE END
  A_0000AE ==
    C:"<FermaT> 00000196 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14";
    !P pop_regs(
      VAR r0, r1,
        r2,
        r3,
        r4,
        r5,
        r6,
        r7,
        r8,
        r9,
        r10,
        r11,
        r12,
        r13,
        r14,
        reg_stack);
    CALL A_0000B2 END
  A_0000B2 ==
    C:"<FermaT> 00000197 r15";
    r15 := 0;
    IF r15 = 0 THEN cc := 0 ELSE cc := 2 FI;
    CALL A_0000B4 END
  A_0000B4 ==
    C:"<FermaT> 00000198 r14";
    destination := r14;
    CALL dispatch END
  GETREC ==
    C:"*";
    C:"READ RECORD";
    C:"<FermaT> 00000200 DDIN WREC GETREC r0 r1 r15 r14";
    C:"FIXME: Unknown File max for DDIN ";
    C:"FIXME: Unknown File max for DDIN ";
    C:"FIXME: Unknown File max for DDIN ";
    C:"FIXME: Unknown File min for DDIN ";
    C:"FIXME: Unknown File max for DDIN ";
    C:"FIXME: Unknown File max for DDIN ";
    C:"FIXME: Unknown File max for DDIN ";
    C:"FIXME: Unknown File min for DDIN ";
    C:"FIXME: Unknown File max for DDIN ";
    C:"FIXME: Unknown File min for DDIN ";
    r0 := NOT_USED;
    r1 := NOT_USED;
    result_code := NOT_USED;
    !P GET_FIXED(DDIN
      VAR WREC[1], r0, r1, result_code, os);
    r15 := DDIN_STATUS;
    IF !XC end_of_file(DDIN)
      THEN destination := EODAD_DDIN; r14 := 198; CALL dispatch FI;
    CALL A_0000C6 END
  A_0000C6 ==
    C:"START OF WORD";
    C:"<FermaT> 00000211 WREC r4 r3";
    r4 := !XF address_of(WREC);
    CALL A_0000CA END
  A_0000CA ==
    C:"<FermaT> 00000212 r5 r4"; r5 := r4; CALL L10A
  END
  L10A ==
    C:"SEPARATOR (,) ?";
    C:"<FermaT> 00000213 L10A r5";
    IF a[r5] = ","
      THEN cc := 0
    ELSIF a[r5] < ","
      THEN cc := 1
      ELSE cc := 2 FI;
    CALL A_0000D0 END
  A_0000D0 ==
    C:"YES.";
    C:"<FermaT> 00000214 L10B";
    IF cc = 0 THEN CALL L10B FI;
    CALL A_0000D4 END
  A_0000D4 ==
    C:"INDEX NEXT CHARACTER";
    C:"<FermaT> 00000215 r5";
    r5 := r5 + 1;
    CALL A_0000D8 END
  A_0000D8 == C:"<FermaT> 00000216 L10A"; CALL L10A END
  L10B ==
    C:"SAVE START OF PAGE NUMBER";
    C:"<FermaT> 00000217 L10B r7 r5";
    r7 := r5 + 1;
    CALL A_0000E0 END
  A_0000E0 ==
    C:"LENGTH OF WORD";
    C:"<FermaT> 00000218 r5 r4";
    r5 := r5 - r4;
    IF r5 = 0
      THEN cc := 0
    ELSIF r5 < 0
      THEN cc := 1
      ELSE cc := 2 FI;
    CALL A_0000E2 END
  A_0000E2 ==
    C:"DECREMENT FOR EXECUTE";
    C:"<FermaT> 00000219 r5 r0";
    r5 := r5 - 1;
    CALL A_0000E4 END
  A_0000E4 ==
    C:"START OF PAGE NUMBER";
    C:"<FermaT> 00000220 r6 r7";
    r6 := r7;
    CALL L10C END
  L10C ==
    C:"END ?";
    C:"<FermaT> 00000221 L10C r7";
    IF a[r7] = " "
      THEN cc := 0
    ELSIF a[r7] < " "
      THEN cc := 1
      ELSE cc := 2 FI;
    CALL A_0000EA END
  A_0000EA ==
    C:"YES.";
    C:"<FermaT> 00000222 L10D";
    IF cc = 0 THEN CALL L10D FI;
    CALL A_0000EE END
  A_0000EE ==
    C:"INDEX NEXT CHARACTER";
    C:"<FermaT> 00000223 r7";
    r7 := r7 + 1;
    CALL A_0000F2 END
  A_0000F2 == C:"<FermaT> 00000224 L10C"; CALL L10C END
  L10D ==
    C:"LENGTH OF PAGE NUMBER";
    C:"<FermaT> 00000225 L10D r7 r6";
    r7 := r7 - r6;
    IF r7 = 0
      THEN cc := 0
    ELSIF r7 < 0
      THEN cc := 1
      ELSE cc := 2 FI;
    CALL A_0000F8 END
  A_0000F8 ==
    C:"DECREMENT FOR EXECUTE";
    C:"<FermaT> 00000226 r7 r0";
    r7 := r7 - 1;
    CALL A_0000FA END
  A_0000FA ==
    C:"RETURN";
    C:"<FermaT> 00000227 r10";
    destination := r10;
    CALL dispatch END
  WCLC1 ==
    C:"*";
    C:"<FermaT> 00000229 WLAST WLAST[1] WCLC1 r3 r4";
    IF WLAST[1] = a[r4]
      THEN cc := 0
    ELSIF WLAST[1] < a[r4]
      THEN cc := 1
      ELSE cc := 2 FI;
    CALL WMVC1 END
  WMVC1 ==
    C:"<FermaT> 00000230 WPRT WPRT[1] WMVC1 r4 r3";
    WPRT[1] := a[r4];
    CALL WMVC2 END
  WMVC2 ==
    C:"<FermaT> 00000231 WMVC2 r6 r8";
    a[r8] := a[r6];
    CALL WMVC3 END
  WMVC3 ==
    C:"<FermaT> 00000232 WLAST WLAST[1] WREC WREC[1] WMVC3 r3";
    WLAST[1] := WREC[1];
    CALL Z END
  _enter_ ==
    C:" <ENTRY POINT> ";
    C:" <NAME=FMT001A1> ";
    r1 := __r1_init__;
    r2 := __r2_init__;
    r3 := __r3_init__;
    r4 := __r4_init__;
    r5 := __r5_init__;
    r6 := __r6_init__;
    r7 := __r7_init__;
    r8 := __r8_init__;
    r9 := __r9_init__;
    r10 := __r10_init__;
    r11 := __r11_init__;
    r12 := __r12_init__;
    r13 := __r13_init__;
    r14 := __r14_init__;
    CALL FMT001A1 END
  dispatch ==
    IF destination = 0
      THEN CALL Z
    ELSIF destination = 50
      THEN CALL A_000032
    ELSIF destination = 54
      THEN CALL LAB100
    ELSIF destination = 58
      THEN CALL A_00003A
    ELSIF destination = 132
      THEN CALL LAB140
    ELSIF destination = 198
      THEN CALL A_0000C6
      ELSE C:"FIXME: Unknown destination "; CALL Z FI
  END ENDACTIONS ENDVAR
