VAR < cc := 0, len_1 := 0, len_2 := 0,
      destination := 0 >:
BEGIN
  ACTIONS _enter_:
  _start_ == CALL Z;
CALL FMT001A0 END
FMT001A0 ==
	C:"*********************************************************************";
	 
	CALL A_000000 END
A_000000 ==
	C:"<FermaT> 00000035 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14";
	!P push_regs(r0, r1, r2, r3, r4, r5, r6, r7, r8, r9,
                           r10, r11, r12, r13, r14 VAR reg_stack);
	!P chain_reg(VAR r13, os);
	CALL A_000004 END
A_000004 ==
	C:"<FermaT> 00000036 r3 r15";
	r3 := r15;
	CALL A_000006 END
A_000006 ==
	C:"<FermaT> 00000038 WSAVE WSAVE[5] WSAVE[6] WSAVE[7] WSAVE[8] r3 r13";
	a[dib(WSAVE+4, 0, r3), 4] := r13;
	CALL A_00000A END
A_00000A ==
	C:"<FermaT> 00000039 WSAVE r14 r3";
	r14 := dib(WSAVE, 0, r3);
	CALL A_00000E END
A_00000E ==
	C:"<FermaT> 00000040 r13 r14";
	a[dib(8, r13, 0), 4] := r14;
	CALL A_000012 END
A_000012 ==
	C:"<FermaT> 00000041 WSAVE r13 r3";
	r13 := dib(WSAVE, 0, r3);
	CALL A_000016 END
A_000016 ==
	C:"*";
	C:"<FermaT> 00000043 WTOTAL r3";
	!P zap(!XF p_lit(1, 1, "0") VAR a[db(WTOTAL, r3), 3 + 1]);
        IF !XC dec_eq(a[db(WTOTAL, r3), 3 + 1], !XF p_lit(1, 1, "0"))
          THEN cc := 0
        ELSIF !XC dec_less(a[db(WTOTAL, r3), 3 + 1], !XF p_lit(1, 1, "0"))
          THEN cc := 1
          ELSE cc := 2 FI;
	CALL A_00001C END
A_00001C ==
	C:"<FermaT> 00000044 WCT r3";
	!P ap(!XF p_lit(1, 1, "1") VAR a[db(WCT, r3), 3 + 1]);
        IF !XC dec_eq(a[db(WCT, r3), 3 + 1], !XF p_lit(1, 1, "0"))
          THEN cc := 0
        ELSIF !XC dec_less(a[db(WCT, r3), 3 + 1], !XF p_lit(1, 1, "0"))
          THEN cc := 1
          ELSE cc := 2 FI;
	CALL A_000022 END
A_000022 ==
	C:"<FermaT> 00000045 WNUM r3";
	!P ap(!XF p_lit(1, 1, "1") VAR a[db(WNUM, r3), 3 + 1]);
        IF !XC dec_eq(a[db(WNUM, r3), 3 + 1], !XF p_lit(1, 1, "0"))
          THEN cc := 0
        ELSIF !XC dec_less(a[db(WNUM, r3), 3 + 1], !XF p_lit(1, 1, "0"))
          THEN cc := 1
          ELSE cc := 2 FI;
	CALL A_000028 END
A_000028 ==
	C:"*";
	C:"<FermaT> 00000047 r15";
	result_code := NOT_USED;
        !P FMT001A1( VAR call_macro, result_code, os);
        !P dummy(VAR  regs, os);
        r15 := result_code;
	CALL A_000036 END
A_000036 ==
	C:"<FermaT> 00000054 r15";
	result_code := NOT_USED;
        !P FMT001A2( VAR call_macro, result_code, os);
        !P dummy(VAR  regs, os);
        r15 := result_code;
	CALL A_000046 END
A_000046 ==
	C:"<FermaT> 00000061 r15";
	result_code := NOT_USED;
        !P FMT001A3( VAR call_macro, result_code, os);
        !P dummy(VAR  regs, os);
        r15 := result_code;
	CALL A_000056 END
A_000056 ==
	C:"*";
	C:"<FermaT> 00000072 WSAVE WSAVE[5] WSAVE[6] WSAVE[7] WSAVE[8] r13 r3";
	r13 := a[dib(WSAVE+4, 0, r3), 4];
	CALL A_00005A END
A_00005A ==
	C:"<FermaT> 00000073 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14";
	!P pop_regs(VAR r0, r1, r2, r3, r4, r5, r6, r7, r8, r9,
                     r10, r11, r12, r13, r14, reg_stack);
	CALL A_00005E END
A_00005E ==
	C:"<FermaT> 00000074 r15";
	r15 := r15 - r15;
        IF r15 = 0 THEN cc := 0 ELSE cc := 2 FI;
	CALL A_000060 END
A_000060 ==
	C:"<FermaT> 00000075 r14";
	IF TRUE
          THEN IF 14 <> 0 THEN destination := r14; CALL dispatch FI FI;
	CALL Z END
  _enter_ == C:" <ENTRY POINT> ";
             C:" <NAME=FMT001A0> ";
                r1  := __r1_init__;
		   r2  := __r2_init__;
		   r3  := __r3_init__;
		   r4  := __r4_init__;
		   r5  := __r5_init__;
		   r6  := __r6_init__;
		   r7  := __r7_init__;
		   r8  := __r8_init__;
		   r9  := __r9_init__;
		   r10 := __r10_init__;
		   r11 := __r11_init__;
		   r12 := __r12_init__;
		   r13 := __r13_init__;
		   r14 := __r14_init__;   CALL FMT001A0 END
dispatch ==
	IF destination = 0 THEN CALL Z
		ELSE C:"FIXME: Unknown destination "; CALL Z FI END
ENDACTIONS
WHERE
  FUNCT dib (d, i, b) ==: (d+i+b).,
  FUNCT db (d, b) ==: (d+b).
END ENDVAR
